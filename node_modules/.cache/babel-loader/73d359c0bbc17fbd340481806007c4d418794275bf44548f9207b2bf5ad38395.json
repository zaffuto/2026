{"ast":null,"code":"'use client';\n\nimport { getAllFocusable, getActiveElement, isTabbable } from '@chakra-ui/utils';\nimport { useRef, useCallback } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\nimport { useSafeLayoutEffect } from './use-safe-layout-effect.mjs';\nimport { useUpdateEffect } from './use-update-effect.mjs';\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef === null || focusRef === void 0 ? void 0 : focusRef.current) || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({\n          preventScroll: true\n        });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nconst defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement)) return;\n    if (focusRef !== null && focusRef !== void 0 && focusRef.current) {\n      requestAnimationFrame(() => {\n        var _focusRef$current;\n        (_focusRef$current = focusRef.current) === null || _focusRef$current === void 0 || _focusRef$current.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({\n            preventScroll\n          });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport { useFocusOnHide, useFocusOnShow };","map":{"version":3,"names":["getAllFocusable","getActiveElement","isTabbable","useRef","useCallback","useEventListener","useSafeLayoutEffect","useUpdateEffect","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","rafId","requestAnimationFrame","focus","preventScroll","cancelAnimationFrame","defaultOptions","useFocusOnShow","target","arguments","length","undefined","element","isRefObject","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","_focusRef$current","tabbableEls","val"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/hooks/dist/esm/use-focus-effect.mjs"],"sourcesContent":["'use client';\nimport { getAllFocusable, getActiveElement, isTabbable } from '@chakra-ui/utils';\nimport { useRef, useCallback } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\nimport { useSafeLayoutEffect } from './use-safe-layout-effect.mjs';\nimport { useUpdateEffect } from './use-update-effect.mjs';\n\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (el.contains(activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = focusRef?.current || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({ preventScroll: true });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nconst defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current)\n      return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement))\n      return;\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\n\nexport { useFocusOnHide, useFocusOnShow };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}