{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"closeOnBlur\", \"closeOnEsc\", \"initialFocusRef\", \"id\", \"returnFocusOnClose\", \"autoFocus\", \"arrowSize\", \"arrowShadowColor\", \"trigger\", \"openDelay\", \"closeDelay\", \"isLazy\", \"lazyBehavior\", \"computePositionOnMount\"];\nimport { useDisclosure, useAnimationState, useFocusOnPointerDown, useFocusOnHide, useFocusOnShow, useOutsideClick, mergeRefs } from '@chakra-ui/hooks';\nimport { isFocusable, lazyDisclosure, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useEffect, useRef, useId, useCallback } from 'react';\nimport { usePopper } from '../popper/use-popper.mjs';\nimport { cssVars } from '../popper/utils.mjs';\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nfunction usePopover() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n      closeOnBlur = true,\n      closeOnEsc = true,\n      initialFocusRef,\n      id,\n      returnFocusOnClose = true,\n      autoFocus = true,\n      arrowSize,\n      arrowShadowColor,\n      trigger = TRIGGER.click,\n      openDelay = 200,\n      closeDelay = 200,\n      isLazy,\n      lazyBehavior = \"unmount\",\n      computePositionOnMount\n    } = props,\n    popperProps = _objectWithoutProperties(props, _excluded);\n  const {\n    isOpen,\n    onClose,\n    onOpen,\n    onToggle\n  } = useDisclosure(props);\n  const [restoreFocus, setRestoreFocus] = useState(returnFocusOnClose);\n  useEffect(() => setRestoreFocus(returnFocusOnClose), [returnFocusOnClose]);\n  const anchorRef = useRef(null);\n  const triggerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const isHoveringRef = useRef(false);\n  const hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  const [hasHeader, setHasHeader] = useState(false);\n  const [hasBody, setHasBody] = useState(false);\n  const uuid = useId();\n  const uid = id !== null && id !== void 0 ? id : uuid;\n  const [triggerId, popoverId, headerId, bodyId] = [\"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"].map(id2 => \"\".concat(id2, \"-\").concat(uid));\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate\n  } = usePopper(_objectSpread(_objectSpread({}, popperProps), {}, {\n    enabled: isOpen || !!computePositionOnMount\n  }));\n  const animated = useAnimationState({\n    isOpen,\n    ref: popoverRef\n  });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: restoreFocus && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: popoverRef,\n    handler(event) {\n      var _event$composedPath$, _event$composedPath;\n      const relatedTarget = (_event$composedPath$ = (_event$composedPath = event.composedPath) === null || _event$composedPath === void 0 ? void 0 : _event$composedPath.call(event)[0]) !== null && _event$composedPath$ !== void 0 ? _event$composedPath$ : [event.target];\n      if (contains(triggerRef.current, relatedTarget)) return;\n      if (relatedTarget) {\n        setRestoreFocus(!isFocusable(relatedTarget));\n      }\n      onClose();\n    }\n  });\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  const getPopoverProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const popoverProps = _objectSpread(_objectSpread({}, props2), {}, {\n      style: _objectSpread(_objectSpread({}, props2.style), {}, {\n        transformOrigin: cssVars.transformOrigin.varRef,\n        [cssVars.arrowSize.var]: arrowSize ? \"\".concat(arrowSize, \"px\") : void 0,\n        [cssVars.arrowShadowColor.var]: arrowShadowColor\n      }),\n      ref: mergeRefs(popoverRef, _ref),\n      children: shouldRenderChildren ? props2.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props2.onKeyDown, event => {\n        if (event.nativeEvent.isComposing) return;\n        if (closeOnEsc && event.key === \"Escape\") {\n          event.preventDefault();\n          event.stopPropagation();\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props2.onBlur, event => {\n        const relatedTarget = getRelatedTarget(event);\n        const targetIsPopover = contains(popoverRef.current, relatedTarget);\n        const targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        const isValidBlur = !targetIsPopover && !targetIsTrigger;\n        if (relatedTarget) {\n          setRestoreFocus(!isFocusable(relatedTarget));\n        }\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : void 0,\n      \"aria-describedby\": hasBody ? bodyId : void 0\n    });\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, event => {\n        if (event.nativeEvent.relatedTarget === null) {\n          return;\n        }\n        isHoveringRef.current = false;\n        setTimeout(() => onClose(), closeDelay);\n      });\n    }\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  const getPopoverPositionerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps(_objectSpread(_objectSpread({}, props2), {}, {\n      style: _objectSpread({\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }, props2.style)\n    }), forwardedRef);\n  }, [isOpen, getPopperProps]);\n  const getAnchorProps = useCallback(function (props2) {\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      // If anchor is rendered, it is used as reference.\n      ref: mergeRefs(_ref, anchorRef, referenceRef)\n    });\n  }, [anchorRef, referenceRef]);\n  const openTimeout = useRef();\n  const closeTimeout = useRef();\n  const maybeReferenceRef = useCallback(node => {\n    if (anchorRef.current == null) {\n      referenceRef(node);\n    }\n  }, [referenceRef]);\n  const getTriggerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const triggerProps = _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);\n    }\n    if (trigger === TRIGGER.hover) {\n      triggerProps.onFocus = callAllHandlers(props2.onFocus, () => {\n        if (openTimeout.current === void 0) {\n          onOpen();\n        }\n      });\n      triggerProps.onBlur = callAllHandlers(props2.onBlur, event => {\n        const relatedTarget = getRelatedTarget(event);\n        const isValidBlur = !contains(popoverRef.current, relatedTarget);\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      });\n      triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, event => {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(() => onOpen(), openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, () => {\n        isHoveringRef.current = false;\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = void 0;\n        }\n        closeTimeout.current = window.setTimeout(() => {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  const getHeaderProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      id: headerId,\n      ref: mergeRefs(ref, node => {\n        setHasHeader(!!node);\n      })\n    });\n  }, [headerId]);\n  const getBodyProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      id: bodyId,\n      ref: mergeRefs(ref, node => {\n        setHasBody(!!node);\n      })\n    });\n  }, [bodyId]);\n  return {\n    forceUpdate,\n    isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose,\n    getAnchorProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps\n  };\n}\nfunction contains(parent, child) {\n  return parent === child || (parent === null || parent === void 0 ? void 0 : parent.contains(child));\n}\nfunction getRelatedTarget(event) {\n  var _event$relatedTarget;\n  const activeEl = event.currentTarget.ownerDocument.activeElement;\n  return (_event$relatedTarget = event.relatedTarget) !== null && _event$relatedTarget !== void 0 ? _event$relatedTarget : activeEl;\n}\nexport { usePopover };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","useDisclosure","useAnimationState","useFocusOnPointerDown","useFocusOnHide","useFocusOnShow","useOutsideClick","mergeRefs","isFocusable","lazyDisclosure","callAllHandlers","useState","useEffect","useRef","useId","useCallback","usePopper","cssVars","TRIGGER","click","hover","usePopover","props","arguments","length","undefined","closeOnBlur","closeOnEsc","initialFocusRef","id","returnFocusOnClose","autoFocus","arrowSize","arrowShadowColor","trigger","openDelay","closeDelay","isLazy","lazyBehavior","computePositionOnMount","popperProps","isOpen","onClose","onOpen","onToggle","restoreFocus","setRestoreFocus","anchorRef","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","hasHeader","setHasHeader","hasBody","setHasBody","uuid","uid","triggerId","popoverId","headerId","bodyId","map","id2","concat","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","enabled","animated","ref","focusRef","visible","shouldFocus","handler","event","_event$composedPath$","_event$composedPath","relatedTarget","composedPath","call","target","contains","shouldRenderChildren","wasSelected","mode","isSelected","present","getPopoverProps","props2","_ref","popoverProps","style","transformOrigin","varRef","var","children","tabIndex","role","onKeyDown","nativeEvent","isComposing","key","preventDefault","stopPropagation","onBlur","getRelatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","forwardedRef","visibility","getAnchorProps","openTimeout","closeTimeout","maybeReferenceRef","node","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getHeaderProps","getBodyProps","onAnimationComplete","onComplete","parent","child","_event$relatedTarget","activeEl","currentTarget","ownerDocument","activeElement"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/popover/use-popover.mjs"],"sourcesContent":["'use client';\nimport { useDisclosure, useAnimationState, useFocusOnPointerDown, useFocusOnHide, useFocusOnShow, useOutsideClick, mergeRefs } from '@chakra-ui/hooks';\nimport { isFocusable, lazyDisclosure, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useEffect, useRef, useId, useCallback } from 'react';\nimport { usePopper } from '../popper/use-popper.mjs';\nimport { cssVars } from '../popper/utils.mjs';\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nfunction usePopover(props = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    computePositionOnMount,\n    ...popperProps\n  } = props;\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props);\n  const [restoreFocus, setRestoreFocus] = useState(returnFocusOnClose);\n  useEffect(() => setRestoreFocus(returnFocusOnClose), [returnFocusOnClose]);\n  const anchorRef = useRef(null);\n  const triggerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const isHoveringRef = useRef(false);\n  const hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  const [hasHeader, setHasHeader] = useState(false);\n  const [hasBody, setHasBody] = useState(false);\n  const uuid = useId();\n  const uid = id ?? uuid;\n  const [triggerId, popoverId, headerId, bodyId] = [\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\"\n  ].map((id2) => `${id2}-${uid}`);\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate\n  } = usePopper({\n    ...popperProps,\n    enabled: isOpen || !!computePositionOnMount\n  });\n  const animated = useAnimationState({ isOpen, ref: popoverRef });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: restoreFocus && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: popoverRef,\n    handler(event) {\n      const relatedTarget = event.composedPath?.()[0] ?? [\n        event.target\n      ];\n      if (contains(triggerRef.current, relatedTarget))\n        return;\n      if (relatedTarget) {\n        setRestoreFocus(!isFocusable(relatedTarget));\n      }\n      onClose();\n    }\n  });\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  const getPopoverProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const popoverProps = {\n        ...props2,\n        style: {\n          ...props2.style,\n          transformOrigin: cssVars.transformOrigin.varRef,\n          [cssVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n          [cssVars.arrowShadowColor.var]: arrowShadowColor\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: shouldRenderChildren ? props2.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props2.onKeyDown, (event) => {\n          if (event.nativeEvent.isComposing)\n            return;\n          if (closeOnEsc && event.key === \"Escape\") {\n            event.preventDefault();\n            event.stopPropagation();\n            onClose();\n          }\n        }),\n        onBlur: callAllHandlers(props2.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event);\n          const targetIsPopover = contains(popoverRef.current, relatedTarget);\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget);\n          const isValidBlur = !targetIsPopover && !targetIsTrigger;\n          if (relatedTarget) {\n            setRestoreFocus(!isFocusable(relatedTarget));\n          }\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose();\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : void 0,\n        \"aria-describedby\": hasBody ? bodyId : void 0\n      };\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\";\n        popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n          isHoveringRef.current = true;\n        });\n        popoverProps.onMouseLeave = callAllHandlers(\n          props2.onMouseLeave,\n          (event) => {\n            if (event.nativeEvent.relatedTarget === null) {\n              return;\n            }\n            isHoveringRef.current = false;\n            setTimeout(() => onClose(), closeDelay);\n          }\n        );\n      }\n      return popoverProps;\n    },\n    [\n      shouldRenderChildren,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      isOpen,\n      closeOnBlur,\n      closeDelay,\n      arrowShadowColor,\n      arrowSize\n    ]\n  );\n  const getPopoverPositionerProps = useCallback(\n    (props2 = {}, forwardedRef = null) => getPopperProps(\n      {\n        ...props2,\n        style: {\n          visibility: isOpen ? \"visible\" : \"hidden\",\n          ...props2.style\n        }\n      },\n      forwardedRef\n    ),\n    [isOpen, getPopperProps]\n  );\n  const getAnchorProps = useCallback(\n    (props2, _ref = null) => {\n      return {\n        ...props2,\n        // If anchor is rendered, it is used as reference.\n        ref: mergeRefs(_ref, anchorRef, referenceRef)\n      };\n    },\n    [anchorRef, referenceRef]\n  );\n  const openTimeout = useRef();\n  const closeTimeout = useRef();\n  const maybeReferenceRef = useCallback(\n    (node) => {\n      if (anchorRef.current == null) {\n        referenceRef(node);\n      }\n    },\n    [referenceRef]\n  );\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const triggerProps = {\n        ...props2,\n        ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId\n      };\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);\n      }\n      if (trigger === TRIGGER.hover) {\n        triggerProps.onFocus = callAllHandlers(props2.onFocus, () => {\n          if (openTimeout.current === void 0) {\n            onOpen();\n          }\n        });\n        triggerProps.onBlur = callAllHandlers(props2.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event);\n          const isValidBlur = !contains(popoverRef.current, relatedTarget);\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose();\n          }\n        });\n        triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose();\n          }\n        });\n        triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n          isHoveringRef.current = true;\n          openTimeout.current = window.setTimeout(() => onOpen(), openDelay);\n        });\n        triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, () => {\n          isHoveringRef.current = false;\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current);\n            openTimeout.current = void 0;\n          }\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose();\n            }\n          }, closeDelay);\n        });\n      }\n      return triggerProps;\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      maybeReferenceRef,\n      onToggle,\n      onOpen,\n      closeOnBlur,\n      onClose,\n      openDelay,\n      closeDelay\n    ]\n  );\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  const getHeaderProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      id: headerId,\n      ref: mergeRefs(ref, (node) => {\n        setHasHeader(!!node);\n      })\n    }),\n    [headerId]\n  );\n  const getBodyProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node);\n      })\n    }),\n    [bodyId]\n  );\n  return {\n    forceUpdate,\n    isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose,\n    getAnchorProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps\n  };\n}\nfunction contains(parent, child) {\n  return parent === child || parent?.contains(child);\n}\nfunction getRelatedTarget(event) {\n  const activeEl = event.currentTarget.ownerDocument.activeElement;\n  return event.relatedTarget ?? activeEl;\n}\n\nexport { usePopover };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}