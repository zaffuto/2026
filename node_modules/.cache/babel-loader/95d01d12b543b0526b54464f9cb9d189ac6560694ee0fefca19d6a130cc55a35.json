{"ast":null,"code":"'use client';\n\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nfunction useBreakpoint(arg) {\n  var _breakpoints$index$br, _breakpoints$index;\n  const opts = isObject(arg) ? arg : {\n    fallback: arg !== null && arg !== void 0 ? arg : \"base\"\n  };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(_ref => {\n    let {\n      minMaxQuery,\n      breakpoint\n    } = _ref;\n    return {\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n  const fallback = breakpoints.map(bp => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: opts.ssr\n  });\n  const index = values.findIndex(value => value == true);\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) === null || _breakpoints$index === void 0 ? void 0 : _breakpoints$index.breakpoint) !== null && _breakpoints$index$br !== void 0 ? _breakpoints$index$br : opts.fallback;\n}\nexport { useBreakpoint };","map":{"version":3,"names":["isObject","useMediaQuery","useTheme","useBreakpoint","arg","_breakpoints$index$br","_breakpoints$index","opts","fallback","theme","breakpoints","__breakpoints","details","map","_ref","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint.mjs"],"sourcesContent":["'use client';\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\n}\n\nexport { useBreakpoint };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,SAASC,aAAaA,CAACC,GAAG,EAAE;EAAA,IAAAC,qBAAA,EAAAC,kBAAA;EAC1B,MAAMC,IAAI,GAAGP,QAAQ,CAACI,GAAG,CAAC,GAAGA,GAAG,GAAG;IAAEI,QAAQ,EAAEJ,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI;EAAO,CAAC;EAC9D,MAAMK,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAMQ,WAAW,GAAGD,KAAK,CAACE,aAAa,CAACC,OAAO,CAACC,GAAG,CACjDC,IAAA;IAAA,IAAC;MAAEC,WAAW;MAAEC;IAAW,CAAC,GAAAF,IAAA;IAAA,OAAM;MAChCE,UAAU;MACVC,KAAK,EAAEF,WAAW,CAACG,OAAO,CAAC,oBAAoB,EAAE,EAAE;IACrD,CAAC;EAAA,CACH,CAAC;EACD,MAAMV,QAAQ,GAAGE,WAAW,CAACG,GAAG,CAAEM,EAAE,IAAKA,EAAE,CAACH,UAAU,KAAKT,IAAI,CAACC,QAAQ,CAAC;EACzE,MAAMY,MAAM,GAAGnB,aAAa,CAC1BS,WAAW,CAACG,GAAG,CAAEM,EAAE,IAAKA,EAAE,CAACF,KAAK,CAAC,EACjC;IAAET,QAAQ;IAAEa,GAAG,EAAEd,IAAI,CAACc;EAAI,CAC5B,CAAC;EACD,MAAMC,KAAK,GAAGF,MAAM,CAACG,SAAS,CAAEC,KAAK,IAAKA,KAAK,IAAI,IAAI,CAAC;EACxD,QAAAnB,qBAAA,IAAAC,kBAAA,GAAOI,WAAW,CAACY,KAAK,CAAC,cAAAhB,kBAAA,uBAAlBA,kBAAA,CAAoBU,UAAU,cAAAX,qBAAA,cAAAA,qBAAA,GAAIE,IAAI,CAACC,QAAQ;AACxD;AAEA,SAASL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}