{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useTabs } from './use-tabs.js';\nimport { TabsProvider } from './use-tabs-context.js';\nconst TabsRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, tabsProps] = splitRenderStrategyProps(props);\n  const [useTabsProps, localprops] = createSplitProps()(tabsProps, [\"activationMode\", \"composite\", \"defaultValue\", \"deselectable\", \"id\", \"ids\", \"loopFocus\", \"navigate\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"translations\", \"value\"]);\n  const tabs = useTabs(useTabsProps);\n  const mergedProps = mergeProps(tabs.getRootProps(), localprops);\n  return /* @__PURE__ */jsx(TabsProvider, {\n    value: tabs,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nTabsRoot.displayName = \"TabsRoot\";\nexport { TabsRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","splitRenderStrategyProps","RenderStrategyPropsProvider","ark","useTabs","TabsProvider","TabsRoot","props","ref","renderStrategyProps","tabsProps","useTabsProps","localprops","tabs","mergedProps","getRootProps","value","children","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/tabs/tabs-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useTabs } from './use-tabs.js';\nimport { TabsProvider } from './use-tabs-context.js';\n\nconst TabsRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, tabsProps] = splitRenderStrategyProps(props);\n  const [useTabsProps, localprops] = createSplitProps()(tabsProps, [\n    \"activationMode\",\n    \"composite\",\n    \"defaultValue\",\n    \"deselectable\",\n    \"id\",\n    \"ids\",\n    \"loopFocus\",\n    \"navigate\",\n    \"onFocusChange\",\n    \"onValueChange\",\n    \"orientation\",\n    \"translations\",\n    \"value\"\n  ]);\n  const tabs = useTabs(useTabsProps);\n  const mergedProps = mergeProps(tabs.getRootProps(), localprops);\n  return /* @__PURE__ */ jsx(TabsProvider, { value: tabs, children: /* @__PURE__ */ jsx(RenderStrategyPropsProvider, { value: renderStrategyProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });\n});\nTabsRoot.displayName = \"TabsRoot\";\n\nexport { TabsRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,wBAAwB,EAAEC,2BAA2B,QAAQ,gCAAgC;AACtG,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAACQ,KAAK,EAAEC,GAAG,KAAK;EAC1C,MAAM,CAACC,mBAAmB,EAAEC,SAAS,CAAC,GAAGT,wBAAwB,CAACM,KAAK,CAAC;EACxE,MAAM,CAACI,YAAY,EAAEC,UAAU,CAAC,GAAGZ,gBAAgB,CAAC,CAAC,CAACU,SAAS,EAAE,CAC/D,gBAAgB,EAChB,WAAW,EACX,cAAc,EACd,cAAc,EACd,IAAI,EACJ,KAAK,EACL,WAAW,EACX,UAAU,EACV,eAAe,EACf,eAAe,EACf,aAAa,EACb,cAAc,EACd,OAAO,CACR,CAAC;EACF,MAAMG,IAAI,GAAGT,OAAO,CAACO,YAAY,CAAC;EAClC,MAAMG,WAAW,GAAGhB,UAAU,CAACe,IAAI,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EAC/D,OAAO,eAAgBf,GAAG,CAACQ,YAAY,EAAE;IAAEW,KAAK,EAAEH,IAAI;IAAEI,QAAQ,EAAE,eAAgBpB,GAAG,CAACK,2BAA2B,EAAE;MAAEc,KAAK,EAAEP,mBAAmB;MAAEQ,QAAQ,EAAE,eAAgBpB,GAAG,CAACM,GAAG,CAACe,GAAG,EAAE;QAAE,GAAGJ,WAAW;QAAEN;MAAI,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AACxN,CAAC,CAAC;AACFF,QAAQ,CAACa,WAAW,GAAG,UAAU;AAEjC,SAASb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}