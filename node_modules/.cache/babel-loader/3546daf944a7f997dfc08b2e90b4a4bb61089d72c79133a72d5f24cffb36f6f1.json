{"ast":null,"code":"'use client';\n\nimport { dataAttr } from '@zag-js/dom-query';\nimport { useControllableState } from '../../utils/use-controllable-state.js';\nimport { parts } from './toggle.anatomy.js';\nfunction useToggle(props) {\n  const {\n    defaultPressed,\n    pressed,\n    onPressedChange,\n    disabled\n  } = props;\n  const [pressedState, setPressedState] = useControllableState({\n    defaultValue: !!defaultPressed,\n    value: pressed,\n    onChange: onPressedChange\n  });\n  return {\n    pressed: pressedState,\n    disabled: !!disabled,\n    setPressed: setPressedState,\n    getRootProps() {\n      return {\n        ...parts.root.attrs,\n        type: \"button\",\n        disabled,\n        \"aria-pressed\": pressedState,\n        \"data-state\": pressedState ? \"on\" : \"off\",\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-disabled\": dataAttr(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          setPressedState(!pressedState);\n        }\n      };\n    },\n    getIndicatorProps() {\n      return {\n        ...parts.indicator.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-state\": pressedState ? \"on\" : \"off\"\n      };\n    }\n  };\n}\nexport { useToggle };","map":{"version":3,"names":["dataAttr","useControllableState","parts","useToggle","props","defaultPressed","pressed","onPressedChange","disabled","pressedState","setPressedState","defaultValue","value","onChange","setPressed","getRootProps","root","attrs","type","onClick","event","defaultPrevented","getIndicatorProps","indicator"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/toggle/use-toggle.js"],"sourcesContent":["'use client';\nimport { dataAttr } from '@zag-js/dom-query';\nimport { useControllableState } from '../../utils/use-controllable-state.js';\nimport { parts } from './toggle.anatomy.js';\n\nfunction useToggle(props) {\n  const { defaultPressed, pressed, onPressedChange, disabled } = props;\n  const [pressedState, setPressedState] = useControllableState({\n    defaultValue: !!defaultPressed,\n    value: pressed,\n    onChange: onPressedChange\n  });\n  return {\n    pressed: pressedState,\n    disabled: !!disabled,\n    setPressed: setPressedState,\n    getRootProps() {\n      return {\n        ...parts.root.attrs,\n        type: \"button\",\n        disabled,\n        \"aria-pressed\": pressedState,\n        \"data-state\": pressedState ? \"on\" : \"off\",\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-disabled\": dataAttr(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          setPressedState(!pressedState);\n        }\n      };\n    },\n    getIndicatorProps() {\n      return {\n        ...parts.indicator.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-state\": pressedState ? \"on\" : \"off\"\n      };\n    }\n  };\n}\n\nexport { useToggle };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,KAAK,QAAQ,qBAAqB;AAE3C,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,MAAM;IAAEC,cAAc;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGJ,KAAK;EACpE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGT,oBAAoB,CAAC;IAC3DU,YAAY,EAAE,CAAC,CAACN,cAAc;IAC9BO,KAAK,EAAEN,OAAO;IACdO,QAAQ,EAAEN;EACZ,CAAC,CAAC;EACF,OAAO;IACLD,OAAO,EAAEG,YAAY;IACrBD,QAAQ,EAAE,CAAC,CAACA,QAAQ;IACpBM,UAAU,EAAEJ,eAAe;IAC3BK,YAAYA,CAAA,EAAG;MACb,OAAO;QACL,GAAGb,KAAK,CAACc,IAAI,CAACC,KAAK;QACnBC,IAAI,EAAE,QAAQ;QACdV,QAAQ;QACR,cAAc,EAAEC,YAAY;QAC5B,YAAY,EAAEA,YAAY,GAAG,IAAI,GAAG,KAAK;QACzC,cAAc,EAAET,QAAQ,CAACS,YAAY,CAAC;QACtC,eAAe,EAAET,QAAQ,CAACQ,QAAQ,CAAC;QACnCW,OAAOA,CAACC,KAAK,EAAE;UACb,IAAIA,KAAK,CAACC,gBAAgB,EAAE;UAC5B,IAAIb,QAAQ,EAAE;UACdE,eAAe,CAAC,CAACD,YAAY,CAAC;QAChC;MACF,CAAC;IACH,CAAC;IACDa,iBAAiBA,CAAA,EAAG;MAClB,OAAO;QACL,GAAGpB,KAAK,CAACqB,SAAS,CAACN,KAAK;QACxB,eAAe,EAAEjB,QAAQ,CAACQ,QAAQ,CAAC;QACnC,cAAc,EAAER,QAAQ,CAACS,YAAY,CAAC;QACtC,YAAY,EAAEA,YAAY,GAAG,IAAI,GAAG;MACtC,CAAC;IACH;EACF,CAAC;AACH;AAEA,SAASN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}