{"ast":null,"code":"'use client';\n\nimport { createContext as createContext$1, useContext } from 'react';\nfunction getErrorMessage(hook, provider) {\n  return \"\".concat(hook, \" returned `undefined`. Seems you forgot to wrap component within \").concat(provider);\n}\nfunction createContext() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue\n  } = options;\n  const Context = createContext$1(defaultValue);\n  Context.displayName = name;\n  function useContext$1() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      var _Error$captureStackTr;\n      const error = new Error(errorMessage !== null && errorMessage !== void 0 ? errorMessage : getErrorMessage(hookName, providerName));\n      error.name = \"ContextError\";\n      (_Error$captureStackTr = Error.captureStackTrace) === null || _Error$captureStackTr === void 0 || _Error$captureStackTr.call(Error, error, useContext$1);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext$1, Context];\n}\nexport { createContext };","map":{"version":3,"names":["createContext","createContext$1","useContext","getErrorMessage","hook","provider","concat","options","arguments","length","undefined","name","strict","hookName","providerName","errorMessage","defaultValue","Context","displayName","useContext$1","context","_Error$captureStackTr","error","Error","captureStackTrace","call","Provider"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/utils/dist/esm/context.mjs"],"sourcesContent":["'use client';\nimport { createContext as createContext$1, useContext } from 'react';\n\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue\n  } = options;\n  const Context = createContext$1(defaultValue);\n  Context.displayName = name;\n  function useContext$1() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage ?? getErrorMessage(hookName, providerName)\n      );\n      error.name = \"ContextError\";\n      Error.captureStackTrace?.(error, useContext$1);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext$1, Context];\n}\n\nexport { createContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,aAAa,IAAIC,eAAe,EAAEC,UAAU,QAAQ,OAAO;AAEpE,SAASC,eAAeA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACvC,UAAAC,MAAA,CAAUF,IAAI,uEAAAE,MAAA,CAAsED,QAAQ;AAC9F;AACA,SAASL,aAAaA,CAAA,EAAe;EAAA,IAAdO,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACjC,MAAM;IACJG,IAAI;IACJC,MAAM,GAAG,IAAI;IACbC,QAAQ,GAAG,YAAY;IACvBC,YAAY,GAAG,UAAU;IACzBC,YAAY;IACZC;EACF,CAAC,GAAGT,OAAO;EACX,MAAMU,OAAO,GAAGhB,eAAe,CAACe,YAAY,CAAC;EAC7CC,OAAO,CAACC,WAAW,GAAGP,IAAI;EAC1B,SAASQ,YAAYA,CAAA,EAAG;IACtB,MAAMC,OAAO,GAAGlB,UAAU,CAACe,OAAO,CAAC;IACnC,IAAI,CAACG,OAAO,IAAIR,MAAM,EAAE;MAAA,IAAAS,qBAAA;MACtB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CACrBR,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIZ,eAAe,CAACU,QAAQ,EAAEC,YAAY,CACxD,CAAC;MACDQ,KAAK,CAACX,IAAI,GAAG,cAAc;MAC3B,CAAAU,qBAAA,GAAAE,KAAK,CAACC,iBAAiB,cAAAH,qBAAA,eAAvBA,qBAAA,CAAAI,IAAA,CAAAF,KAAK,EAAqBD,KAAK,EAAEH,YAAY,CAAC;MAC9C,MAAMG,KAAK;IACb;IACA,OAAOF,OAAO;EAChB;EACA,OAAO,CAACH,OAAO,CAACS,QAAQ,EAAEP,YAAY,EAAEF,OAAO,CAAC;AAClD;AAEA,SAASjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}