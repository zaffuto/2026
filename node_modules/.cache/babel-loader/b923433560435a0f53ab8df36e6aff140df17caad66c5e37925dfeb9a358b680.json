{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, nextById, prevById, itemById, dataAttr, isSelfTarget, isComposingEvent, getEventKey, isSafari, clickIfLink, raf, getFocusables, nextTick, isAnchorElement } from '@zag-js/dom-query';\nimport { first, last, createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackElementRect } from '@zag-js/element-rect';\nimport { createProps } from '@zag-js/types';\n\n// src/tabs.anatomy.ts\nvar anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getListId: ctx => ctx.ids?.list ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx, id) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx, id) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: ctx => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n  getListEl: ctx => dom.getById(ctx, dom.getListId(ctx)),\n  getContentEl: (ctx, id) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx, id) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: ctx => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getElements: ctx => {\n    const ownerId = CSS.escape(dom.getListId(ctx));\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`;\n    return queryAll(dom.getListEl(ctx), selector);\n  },\n  getFirstTriggerEl: ctx => first(dom.getElements(ctx)),\n  getLastTriggerEl: ctx => last(dom.getElements(ctx)),\n  getNextTriggerEl: (ctx, id) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getPrevTriggerEl: (ctx, id) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getSelectedContentEl: ctx => {\n    if (!ctx.value) return;\n    return dom.getContentEl(ctx, ctx.value);\n  },\n  getSelectedTriggerEl: ctx => {\n    if (!ctx.value) return;\n    return dom.getTriggerEl(ctx, ctx.value);\n  },\n  getOffsetRect: el => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0\n    };\n  },\n  getRectById: (ctx, id) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id));\n    return dom.resolveRect(dom.getOffsetRect(tab));\n  },\n  resolveRect: rect => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/tabs.connect.ts\nfunction connect(state, send, normalize) {\n  const translations = state.context.translations;\n  const focused = state.matches(\"focused\");\n  const isVertical = state.context.orientation === \"vertical\";\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const composite = state.context.composite;\n  const indicator = state.context.indicatorState;\n  function getTriggerState(props2) {\n    return {\n      selected: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      disabled: !!props2.disabled\n    };\n  }\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    clearValue() {\n      send({\n        type: \"CLEAR_VALUE\"\n      });\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value);\n      send({\n        type: \"SET_INDICATOR_RECT\",\n        id\n      });\n    },\n    syncTabIndex() {\n      send(\"SYNC_TAB_INDEX\");\n    },\n    selectNext(fromValue) {\n      send({\n        type: \"TAB_FOCUS\",\n        value: fromValue,\n        src: \"selectNext\"\n      });\n      send({\n        type: \"ARROW_NEXT\",\n        src: \"selectNext\"\n      });\n    },\n    selectPrev(fromValue) {\n      send({\n        type: \"TAB_FOCUS\",\n        value: fromValue,\n        src: \"selectPrev\"\n      });\n      send({\n        type: \"ARROW_PREV\",\n        src: \"selectPrev\"\n      });\n    },\n    focus() {\n      dom.getSelectedTriggerEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        dir: state.context.dir\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        dir: state.context.dir,\n        \"data-focus\": dataAttr(focused),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_NEXT\",\n                key: \"ArrowDown\"\n              });\n            },\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_PREV\",\n                key: \"ArrowUp\"\n              });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_PREV\",\n                key: \"ArrowLeft\"\n              });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_NEXT\",\n                key: \"ArrowRight\"\n              });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            },\n            Enter() {\n              send({\n                type: \"ENTER\"\n              });\n            }\n          };\n          let key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getTriggerState,\n    getTriggerProps(props2) {\n      const {\n        value,\n        disabled\n      } = props2;\n      const triggerState = getTriggerState(props2);\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": dataAttr(triggerState.selected),\n        \"data-focus\": dataAttr(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? dom.getContentId(state.context, value) : void 0,\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-ssr\": dataAttr(state.context.ssr),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({\n            type: \"TAB_FOCUS\",\n            value\n          });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({\n              type: \"TAB_BLUR\"\n            });\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (isSafari()) {\n            event.currentTarget.focus();\n          }\n          send({\n            type: \"TAB_CLICK\",\n            value\n          });\n        }\n      });\n    },\n    getContentProps(props2) {\n      const {\n        value\n      } = props2;\n      const selected = state.context.value === value;\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicator.rect?.left,\n          \"--top\": indicator.rect?.top,\n          \"--width\": indicator.rect?.width,\n          \"--height\": indicator.rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicator.transition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar {\n  not\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    initial: \"idle\",\n    context: {\n      dir: \"ltr\",\n      orientation: \"horizontal\",\n      activationMode: \"automatic\",\n      value: null,\n      loopFocus: true,\n      composite: true,\n      navigate(details) {\n        clickIfLink(details.node);\n      },\n      ...ctx,\n      focusedValue: ctx.value ?? null,\n      ssr: true,\n      indicatorState: {\n        rendered: false,\n        transition: false,\n        rect: {\n          left: \"0px\",\n          top: \"0px\",\n          width: \"0px\",\n          height: \"0px\"\n        }\n      }\n    },\n    watch: {\n      value: [\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"navigateIfNeeded\"],\n      dir: [\"syncIndicatorRect\"],\n      orientation: [\"syncIndicatorRect\"]\n    },\n    on: {\n      SET_VALUE: {\n        actions: \"setValue\"\n      },\n      CLEAR_VALUE: {\n        actions: \"clearValue\"\n      },\n      SET_INDICATOR_RECT: {\n        actions: \"setIndicatorRect\"\n      },\n      SYNC_TAB_INDEX: {\n        actions: \"syncTabIndex\"\n      }\n    },\n    created: [\"syncFocusedValue\"],\n    entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n    exit: [\"cleanupObserver\"],\n    states: {\n      idle: {\n        on: {\n          TAB_FOCUS: {\n            target: \"focused\",\n            actions: \"setFocusedValue\"\n          },\n          TAB_CLICK: {\n            target: \"focused\",\n            actions: [\"setFocusedValue\", \"setValue\"]\n          }\n        }\n      },\n      focused: {\n        on: {\n          TAB_CLICK: {\n            target: \"focused\",\n            actions: [\"setFocusedValue\", \"setValue\"]\n          },\n          ARROW_PREV: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusPrevTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusPrevTab\"\n          }],\n          ARROW_NEXT: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusNextTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusNextTab\"\n          }],\n          HOME: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusFirstTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusFirstTab\"\n          }],\n          END: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusLastTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusLastTab\"\n          }],\n          ENTER: {\n            guard: not(\"selectOnFocus\"),\n            actions: \"selectFocusedTab\"\n          },\n          TAB_FOCUS: {\n            actions: [\"setFocusedValue\"]\n          },\n          TAB_BLUR: {\n            target: \"idle\",\n            actions: \"clearFocusedValue\"\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      selectOnFocus: ctx2 => ctx2.activationMode === \"automatic\"\n    },\n    actions: {\n      syncFocusedValue(ctx2) {\n        if (ctx2.value != null && ctx2.focusedValue == null) {\n          ctx2.focusedValue = ctx2.value;\n        }\n      },\n      selectFocusedTab(ctx2) {\n        raf(() => {\n          const nullable = ctx2.deselectable && ctx2.value === ctx2.focusedValue;\n          const value = nullable ? null : ctx2.focusedValue;\n          set.value(ctx2, value);\n        });\n      },\n      setFocusedValue(ctx2, evt) {\n        if (evt.value == null) return;\n        set.focusedValue(ctx2, evt.value);\n      },\n      clearFocusedValue(ctx2) {\n        set.focusedValue(ctx2, null);\n      },\n      setValue(ctx2, evt) {\n        const nullable = ctx2.deselectable && ctx2.value === ctx2.focusedValue;\n        const value = nullable ? null : evt.value;\n        set.value(ctx2, value);\n      },\n      clearValue(ctx2) {\n        set.value(ctx2, null);\n      },\n      focusFirstTab(ctx2) {\n        raf(() => {\n          dom.getFirstTriggerEl(ctx2)?.focus();\n        });\n      },\n      focusLastTab(ctx2) {\n        raf(() => {\n          dom.getLastTriggerEl(ctx2)?.focus();\n        });\n      },\n      focusNextTab(ctx2) {\n        if (!ctx2.focusedValue) return;\n        const triggerEl = dom.getNextTriggerEl(ctx2, ctx2.focusedValue);\n        raf(() => {\n          if (ctx2.composite) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            set.focusedValue(ctx2, triggerEl.dataset.value);\n          }\n        });\n      },\n      focusPrevTab(ctx2) {\n        if (!ctx2.focusedValue) return;\n        const triggerEl = dom.getPrevTriggerEl(ctx2, ctx2.focusedValue);\n        raf(() => {\n          if (ctx2.composite) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            set.focusedValue(ctx2, triggerEl.dataset.value);\n          }\n        });\n      },\n      checkRenderedElements(ctx2) {\n        ctx2.indicatorState.rendered = !!dom.getIndicatorEl(ctx2);\n      },\n      syncTabIndex(ctx2) {\n        raf(() => {\n          const contentEl = dom.getSelectedContentEl(ctx2);\n          if (!contentEl) return;\n          const focusables = getFocusables(contentEl);\n          if (focusables.length > 0) {\n            contentEl.removeAttribute(\"tabindex\");\n          } else {\n            contentEl.setAttribute(\"tabindex\", \"0\");\n          }\n        });\n      },\n      cleanupObserver(ctx2) {\n        ctx2.indicatorCleanup?.();\n      },\n      allowIndicatorTransition(ctx2) {\n        ctx2.indicatorState.transition = true;\n      },\n      setIndicatorRect(ctx2, evt) {\n        const value = evt.id ?? ctx2.value;\n        if (!ctx2.indicatorState.rendered || !value) return;\n        const triggerEl = dom.getTriggerEl(ctx2, value);\n        if (!triggerEl) return;\n        ctx2.indicatorState.rect = dom.getRectById(ctx2, value);\n        nextTick(() => {\n          ctx2.indicatorState.transition = false;\n        });\n      },\n      syncSsr(ctx2) {\n        ctx2.ssr = false;\n      },\n      syncIndicatorRect(ctx2) {\n        ctx2.indicatorCleanup?.();\n        const value = ctx2.value;\n        if (!ctx2.indicatorState.rendered || !value) return;\n        const triggerEl = dom.getSelectedTriggerEl(ctx2);\n        if (!triggerEl) return;\n        ctx2.indicatorCleanup = trackElementRect(triggerEl, {\n          getRect(el) {\n            return dom.getOffsetRect(el);\n          },\n          onChange(rect) {\n            ctx2.indicatorState.rect = dom.resolveRect(rect);\n            nextTick(() => {\n              ctx2.indicatorState.transition = false;\n            });\n          }\n        });\n      },\n      navigateIfNeeded(ctx2) {\n        const triggerEl = dom.getSelectedTriggerEl(ctx2);\n        if (!isAnchorElement(triggerEl)) return;\n        ctx2.navigate({\n          value: ctx2.value,\n          node: triggerEl\n        });\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({\n      value: ctx.value\n    });\n  },\n  focusChange: ctx => {\n    if (ctx.focusedValue == null) return;\n    ctx.onFocusChange?.({\n      focusedValue: ctx.focusedValue\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(value, ctx.value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  focusedValue: (ctx, value) => {\n    if (isEqual(value, ctx.focusedValue)) return;\n    ctx.focusedValue = value;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = createProps()([\"activationMode\", \"composite\", \"deselectable\", \"dir\", \"getRootNode\", \"id\", \"ids\", \"loopFocus\", \"navigate\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"translations\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar triggerProps = createProps()([\"disabled\", \"value\"]);\nvar splitTriggerProps = createSplitProps(triggerProps);\nvar contentProps = createProps()([\"value\"]);\nvar splitContentProps = createSplitProps(contentProps);\nexport { anatomy, connect, contentProps, machine, props, splitContentProps, splitProps, splitTriggerProps, triggerProps };","map":{"version":3,"names":["createAnatomy","createScope","queryAll","nextById","prevById","itemById","dataAttr","isSelfTarget","isComposingEvent","getEventKey","isSafari","clickIfLink","raf","getFocusables","nextTick","isAnchorElement","first","last","createSplitProps","compact","isEqual","createMachine","guards","trackElementRect","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getListId","list","getContentId","content","getTriggerId","trigger","getIndicatorId","indicator","getListEl","getById","getContentEl","getTriggerEl","getIndicatorEl","getElements","ownerId","CSS","escape","selector","getFirstTriggerEl","getLastTriggerEl","getNextTriggerEl","loopFocus","getPrevTriggerEl","getSelectedContentEl","value","getSelectedTriggerEl","getOffsetRect","el","left","offsetLeft","top","offsetTop","width","offsetWidth","height","offsetHeight","getRectById","tab","resolveRect","rect","connect","state","send","normalize","translations","context","focused","matches","isVertical","orientation","isHorizontal","composite","indicatorState","getTriggerState","props2","selected","focusedValue","disabled","setValue","type","clearValue","setIndicatorRect","syncTabIndex","selectNext","fromValue","src","selectPrev","focus","getRootProps","element","attrs","dir","getListProps","role","listLabel","onKeyDown","event","defaultPrevented","keyMap","ArrowDown","key","ArrowUp","ArrowLeft","ArrowRight","Home","End","Enter","exec","preventDefault","getTriggerProps","triggerState","button","ssr","tabIndex","onFocus","onBlur","target","relatedTarget","getAttribute","onClick","currentTarget","getContentProps","hidden","getIndicatorProps","style","position","willChange","transitionProperty","transitionDuration","transition","transitionTimingFunction","not","machine","userContext","initial","activationMode","navigate","details","node","rendered","watch","on","SET_VALUE","actions","CLEAR_VALUE","SET_INDICATOR_RECT","SYNC_TAB_INDEX","created","entry","exit","states","idle","TAB_FOCUS","TAB_CLICK","ARROW_PREV","guard","ARROW_NEXT","HOME","END","ENTER","TAB_BLUR","selectOnFocus","ctx2","syncFocusedValue","selectFocusedTab","nullable","deselectable","set","setFocusedValue","evt","clearFocusedValue","focusFirstTab","focusLastTab","focusNextTab","triggerEl","dataset","focusPrevTab","checkRenderedElements","contentEl","focusables","length","removeAttribute","setAttribute","cleanupObserver","indicatorCleanup","allowIndicatorTransition","syncSsr","syncIndicatorRect","getRect","onChange","navigateIfNeeded","invoke","change","onValueChange","focusChange","onFocusChange","props","splitProps","triggerProps","splitTriggerProps","contentProps","splitContentProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/tabs/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, nextById, prevById, itemById, dataAttr, isSelfTarget, isComposingEvent, getEventKey, isSafari, clickIfLink, raf, getFocusables, nextTick, isAnchorElement } from '@zag-js/dom-query';\nimport { first, last, createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackElementRect } from '@zag-js/element-rect';\nimport { createProps } from '@zag-js/types';\n\n// src/tabs.anatomy.ts\nvar anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getListId: (ctx) => ctx.ids?.list ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx, id) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx, id) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: (ctx) => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n  getListEl: (ctx) => dom.getById(ctx, dom.getListId(ctx)),\n  getContentEl: (ctx, id) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx, id) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: (ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getElements: (ctx) => {\n    const ownerId = CSS.escape(dom.getListId(ctx));\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`;\n    return queryAll(dom.getListEl(ctx), selector);\n  },\n  getFirstTriggerEl: (ctx) => first(dom.getElements(ctx)),\n  getLastTriggerEl: (ctx) => last(dom.getElements(ctx)),\n  getNextTriggerEl: (ctx, id) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getPrevTriggerEl: (ctx, id) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getSelectedContentEl: (ctx) => {\n    if (!ctx.value) return;\n    return dom.getContentEl(ctx, ctx.value);\n  },\n  getSelectedTriggerEl: (ctx) => {\n    if (!ctx.value) return;\n    return dom.getTriggerEl(ctx, ctx.value);\n  },\n  getOffsetRect: (el) => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0\n    };\n  },\n  getRectById: (ctx, id) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id));\n    return dom.resolveRect(dom.getOffsetRect(tab));\n  },\n  resolveRect: (rect) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/tabs.connect.ts\nfunction connect(state, send, normalize) {\n  const translations = state.context.translations;\n  const focused = state.matches(\"focused\");\n  const isVertical = state.context.orientation === \"vertical\";\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const composite = state.context.composite;\n  const indicator = state.context.indicatorState;\n  function getTriggerState(props2) {\n    return {\n      selected: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      disabled: !!props2.disabled\n    };\n  }\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" });\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value);\n      send({ type: \"SET_INDICATOR_RECT\", id });\n    },\n    syncTabIndex() {\n      send(\"SYNC_TAB_INDEX\");\n    },\n    selectNext(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectNext\" });\n      send({ type: \"ARROW_NEXT\", src: \"selectNext\" });\n    },\n    selectPrev(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectPrev\" });\n      send({ type: \"ARROW_PREV\", src: \"selectPrev\" });\n    },\n    focus() {\n      dom.getSelectedTriggerEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        dir: state.context.dir\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        dir: state.context.dir,\n        \"data-focus\": dataAttr(focused),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_NEXT\", key: \"ArrowDown\" });\n            },\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_PREV\", key: \"ArrowUp\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_PREV\", key: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_NEXT\", key: \"ArrowRight\" });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            },\n            Enter() {\n              send({ type: \"ENTER\" });\n            }\n          };\n          let key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getTriggerState,\n    getTriggerProps(props2) {\n      const { value, disabled } = props2;\n      const triggerState = getTriggerState(props2);\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": dataAttr(triggerState.selected),\n        \"data-focus\": dataAttr(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? dom.getContentId(state.context, value) : void 0,\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-ssr\": dataAttr(state.context.ssr),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({ type: \"TAB_FOCUS\", value });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({ type: \"TAB_BLUR\" });\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (isSafari()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TAB_CLICK\", value });\n        }\n      });\n    },\n    getContentProps(props2) {\n      const { value } = props2;\n      const selected = state.context.value === value;\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicator.rect?.left,\n          \"--top\": indicator.rect?.top,\n          \"--width\": indicator.rect?.width,\n          \"--height\": indicator.rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicator.transition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      initial: \"idle\",\n      context: {\n        dir: \"ltr\",\n        orientation: \"horizontal\",\n        activationMode: \"automatic\",\n        value: null,\n        loopFocus: true,\n        composite: true,\n        navigate(details) {\n          clickIfLink(details.node);\n        },\n        ...ctx,\n        focusedValue: ctx.value ?? null,\n        ssr: true,\n        indicatorState: {\n          rendered: false,\n          transition: false,\n          rect: { left: \"0px\", top: \"0px\", width: \"0px\", height: \"0px\" }\n        }\n      },\n      watch: {\n        value: [\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"navigateIfNeeded\"],\n        dir: [\"syncIndicatorRect\"],\n        orientation: [\"syncIndicatorRect\"]\n      },\n      on: {\n        SET_VALUE: {\n          actions: \"setValue\"\n        },\n        CLEAR_VALUE: {\n          actions: \"clearValue\"\n        },\n        SET_INDICATOR_RECT: {\n          actions: \"setIndicatorRect\"\n        },\n        SYNC_TAB_INDEX: {\n          actions: \"syncTabIndex\"\n        }\n      },\n      created: [\"syncFocusedValue\"],\n      entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n      exit: [\"cleanupObserver\"],\n      states: {\n        idle: {\n          on: {\n            TAB_FOCUS: {\n              target: \"focused\",\n              actions: \"setFocusedValue\"\n            },\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"]\n            }\n          }\n        },\n        focused: {\n          on: {\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"]\n            },\n            ARROW_PREV: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusPrevTab\", \"selectFocusedTab\"]\n              },\n              {\n                actions: \"focusPrevTab\"\n              }\n            ],\n            ARROW_NEXT: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusNextTab\", \"selectFocusedTab\"]\n              },\n              {\n                actions: \"focusNextTab\"\n              }\n            ],\n            HOME: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusFirstTab\", \"selectFocusedTab\"]\n              },\n              {\n                actions: \"focusFirstTab\"\n              }\n            ],\n            END: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusLastTab\", \"selectFocusedTab\"]\n              },\n              {\n                actions: \"focusLastTab\"\n              }\n            ],\n            ENTER: {\n              guard: not(\"selectOnFocus\"),\n              actions: \"selectFocusedTab\"\n            },\n            TAB_FOCUS: {\n              actions: [\"setFocusedValue\"]\n            },\n            TAB_BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedValue\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        selectOnFocus: (ctx2) => ctx2.activationMode === \"automatic\"\n      },\n      actions: {\n        syncFocusedValue(ctx2) {\n          if (ctx2.value != null && ctx2.focusedValue == null) {\n            ctx2.focusedValue = ctx2.value;\n          }\n        },\n        selectFocusedTab(ctx2) {\n          raf(() => {\n            const nullable = ctx2.deselectable && ctx2.value === ctx2.focusedValue;\n            const value = nullable ? null : ctx2.focusedValue;\n            set.value(ctx2, value);\n          });\n        },\n        setFocusedValue(ctx2, evt) {\n          if (evt.value == null) return;\n          set.focusedValue(ctx2, evt.value);\n        },\n        clearFocusedValue(ctx2) {\n          set.focusedValue(ctx2, null);\n        },\n        setValue(ctx2, evt) {\n          const nullable = ctx2.deselectable && ctx2.value === ctx2.focusedValue;\n          const value = nullable ? null : evt.value;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, null);\n        },\n        focusFirstTab(ctx2) {\n          raf(() => {\n            dom.getFirstTriggerEl(ctx2)?.focus();\n          });\n        },\n        focusLastTab(ctx2) {\n          raf(() => {\n            dom.getLastTriggerEl(ctx2)?.focus();\n          });\n        },\n        focusNextTab(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getNextTriggerEl(ctx2, ctx2.focusedValue);\n          raf(() => {\n            if (ctx2.composite) {\n              triggerEl?.focus();\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx2, triggerEl.dataset.value);\n            }\n          });\n        },\n        focusPrevTab(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getPrevTriggerEl(ctx2, ctx2.focusedValue);\n          raf(() => {\n            if (ctx2.composite) {\n              triggerEl?.focus();\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx2, triggerEl.dataset.value);\n            }\n          });\n        },\n        checkRenderedElements(ctx2) {\n          ctx2.indicatorState.rendered = !!dom.getIndicatorEl(ctx2);\n        },\n        syncTabIndex(ctx2) {\n          raf(() => {\n            const contentEl = dom.getSelectedContentEl(ctx2);\n            if (!contentEl) return;\n            const focusables = getFocusables(contentEl);\n            if (focusables.length > 0) {\n              contentEl.removeAttribute(\"tabindex\");\n            } else {\n              contentEl.setAttribute(\"tabindex\", \"0\");\n            }\n          });\n        },\n        cleanupObserver(ctx2) {\n          ctx2.indicatorCleanup?.();\n        },\n        allowIndicatorTransition(ctx2) {\n          ctx2.indicatorState.transition = true;\n        },\n        setIndicatorRect(ctx2, evt) {\n          const value = evt.id ?? ctx2.value;\n          if (!ctx2.indicatorState.rendered || !value) return;\n          const triggerEl = dom.getTriggerEl(ctx2, value);\n          if (!triggerEl) return;\n          ctx2.indicatorState.rect = dom.getRectById(ctx2, value);\n          nextTick(() => {\n            ctx2.indicatorState.transition = false;\n          });\n        },\n        syncSsr(ctx2) {\n          ctx2.ssr = false;\n        },\n        syncIndicatorRect(ctx2) {\n          ctx2.indicatorCleanup?.();\n          const value = ctx2.value;\n          if (!ctx2.indicatorState.rendered || !value) return;\n          const triggerEl = dom.getSelectedTriggerEl(ctx2);\n          if (!triggerEl) return;\n          ctx2.indicatorCleanup = trackElementRect(triggerEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el);\n            },\n            onChange(rect) {\n              ctx2.indicatorState.rect = dom.resolveRect(rect);\n              nextTick(() => {\n                ctx2.indicatorState.transition = false;\n              });\n            }\n          });\n        },\n        navigateIfNeeded(ctx2) {\n          const triggerEl = dom.getSelectedTriggerEl(ctx2);\n          if (!isAnchorElement(triggerEl)) return;\n          ctx2.navigate({ value: ctx2.value, node: triggerEl });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({ value: ctx.value });\n  },\n  focusChange: (ctx) => {\n    if (ctx.focusedValue == null) return;\n    ctx.onFocusChange?.({ focusedValue: ctx.focusedValue });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(value, ctx.value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  focusedValue: (ctx, value) => {\n    if (isEqual(value, ctx.focusedValue)) return;\n    ctx.focusedValue = value;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = createProps()([\n  \"activationMode\",\n  \"composite\",\n  \"deselectable\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = createSplitProps(props);\nvar triggerProps = createProps()([\"disabled\", \"value\"]);\nvar splitTriggerProps = createSplitProps(triggerProps);\nvar contentProps = createProps()([\"value\"]);\nvar splitContentProps = createSplitProps(contentProps);\n\nexport { anatomy, connect, contentProps, machine, props, splitContentProps, splitProps, splitTriggerProps, triggerProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}