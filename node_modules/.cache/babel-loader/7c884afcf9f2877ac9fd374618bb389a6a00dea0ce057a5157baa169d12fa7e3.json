{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as tooltip from '@zag-js/tooltip';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useTooltip = (props = {}) => {\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    open: props.defaultOpen,\n    \"open.controlled\": props.open !== void 0,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    onOpenChange: useEvent(props.onOpenChange, {\n      sync: true\n    })\n  };\n  const [state, send] = useMachine(tooltip.machine(initialContext), {\n    context\n  });\n  return tooltip.connect(state, send, normalizeProps);\n};\nexport { useTooltip };","map":{"version":3,"names":["useMachine","normalizeProps","tooltip","useId","useEnvironmentContext","useLocaleContext","useEvent","useTooltip","props","getRootNode","dir","initialContext","id","open","defaultOpen","context","onOpenChange","sync","state","send","machine","connect"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/tooltip/use-tooltip.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as tooltip from '@zag-js/tooltip';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useTooltip = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    open: props.defaultOpen,\n    \"open.controlled\": props.open !== void 0,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    onOpenChange: useEvent(props.onOpenChange, { sync: true })\n  };\n  const [state, send] = useMachine(tooltip.machine(initialContext), { context });\n  return tooltip.connect(state, send, normalizeProps);\n};\n\nexport { useTooltip };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAC1C,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EACjC,MAAM;IAAEC;EAAY,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEM;EAAI,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAClC,MAAMM,cAAc,GAAG;IACrBC,EAAE,EAAET,KAAK,CAAC,CAAC;IACXO,GAAG;IACHD,WAAW;IACXI,IAAI,EAAEL,KAAK,CAACM,WAAW;IACvB,iBAAiB,EAAEN,KAAK,CAACK,IAAI,KAAK,KAAK,CAAC;IACxC,GAAGL;EACL,CAAC;EACD,MAAMO,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBK,YAAY,EAAEV,QAAQ,CAACE,KAAK,CAACQ,YAAY,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;EAC3D,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGnB,UAAU,CAACE,OAAO,CAACkB,OAAO,CAACT,cAAc,CAAC,EAAE;IAAEI;EAAQ,CAAC,CAAC;EAC9E,OAAOb,OAAO,CAACmB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAElB,cAAc,CAAC;AACrD,CAAC;AAED,SAASM,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}