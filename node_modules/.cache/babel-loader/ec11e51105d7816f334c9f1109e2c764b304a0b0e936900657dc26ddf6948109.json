{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useCheckbox } from './use-checkbox.js';\nimport { CheckboxProvider } from './use-checkbox-context.js';\nconst CheckboxRoot = forwardRef((props, ref) => {\n  const [useCheckboxProps, localProps] = createSplitProps()(props, [\"checked\", \"defaultChecked\", \"disabled\", \"form\", \"id\", \"ids\", \"invalid\", \"name\", \"onCheckedChange\", \"readOnly\", \"required\", \"value\"]);\n  const checkbox = useCheckbox(useCheckboxProps);\n  const mergedProps = mergeProps(checkbox.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(CheckboxProvider, {\n    value: checkbox,\n    children: /* @__PURE__ */jsx(ark.label, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nCheckboxRoot.displayName = \"CheckboxRoot\";\nexport { CheckboxRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","useCheckbox","CheckboxProvider","CheckboxRoot","props","ref","useCheckboxProps","localProps","checkbox","mergedProps","getRootProps","value","children","label","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/checkbox/checkbox-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useCheckbox } from './use-checkbox.js';\nimport { CheckboxProvider } from './use-checkbox-context.js';\n\nconst CheckboxRoot = forwardRef((props, ref) => {\n  const [useCheckboxProps, localProps] = createSplitProps()(props, [\n    \"checked\",\n    \"defaultChecked\",\n    \"disabled\",\n    \"form\",\n    \"id\",\n    \"ids\",\n    \"invalid\",\n    \"name\",\n    \"onCheckedChange\",\n    \"readOnly\",\n    \"required\",\n    \"value\"\n  ]);\n  const checkbox = useCheckbox(useCheckboxProps);\n  const mergedProps = mergeProps(checkbox.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(CheckboxProvider, { value: checkbox, children: /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ref }) });\n});\nCheckboxRoot.displayName = \"CheckboxRoot\";\n\nexport { CheckboxRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,MAAMC,YAAY,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAC9C,MAAM,CAACC,gBAAgB,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAACK,KAAK,EAAE,CAC/D,SAAS,EACT,gBAAgB,EAChB,UAAU,EACV,MAAM,EACN,IAAI,EACJ,KAAK,EACL,SAAS,EACT,MAAM,EACN,iBAAiB,EACjB,UAAU,EACV,UAAU,EACV,OAAO,CACR,CAAC;EACF,MAAMI,QAAQ,GAAGP,WAAW,CAACK,gBAAgB,CAAC;EAC9C,MAAMG,WAAW,GAAGZ,UAAU,CAACW,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACnE,OAAO,eAAgBX,GAAG,CAACM,gBAAgB,EAAE;IAAES,KAAK,EAAEH,QAAQ;IAAEI,QAAQ,EAAE,eAAgBhB,GAAG,CAACI,GAAG,CAACa,KAAK,EAAE;MAAE,GAAGJ,WAAW;MAAEJ;IAAI,CAAC;EAAE,CAAC,CAAC;AACtI,CAAC,CAAC;AACFF,YAAY,CAACW,WAAW,GAAG,cAAc;AAEzC,SAASX,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}