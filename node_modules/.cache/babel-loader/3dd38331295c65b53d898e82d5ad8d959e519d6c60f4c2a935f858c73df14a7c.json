{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, getWindow, dataAttr } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/clipboard.anatomy.ts\nvar anatomy = createAnatomy(\"clipboard\").parts(\"root\", \"control\", \"trigger\", \"indicator\", \"input\", \"label\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `clip:${ctx.id}`,\n  getInputId: ctx => ctx.ids?.input ?? `clip:${ctx.id}:input`,\n  getLabelId: ctx => ctx.ids?.label ?? `clip:${ctx.id}:label`,\n  getInputEl: ctx => dom.getById(ctx, dom.getInputId(ctx)),\n  writeToClipboard: ctx => copyText(dom.getDoc(ctx), ctx.value)\n});\nfunction createNode(doc, text) {\n  const node = doc.createElement(\"pre\");\n  Object.assign(node.style, {\n    width: \"1px\",\n    height: \"1px\",\n    position: \"fixed\",\n    top: \"5px\"\n  });\n  node.textContent = text;\n  return node;\n}\nfunction copyNode(node) {\n  const win = getWindow(node);\n  const selection = win.getSelection();\n  if (selection == null) {\n    return Promise.reject(new Error());\n  }\n  selection.removeAllRanges();\n  const doc = node.ownerDocument;\n  const range = doc.createRange();\n  range.selectNodeContents(node);\n  selection.addRange(range);\n  doc.execCommand(\"copy\");\n  selection.removeAllRanges();\n  return Promise.resolve();\n}\nfunction copyText(doc, text) {\n  const win = doc.defaultView || window;\n  if (win.navigator.clipboard?.writeText !== void 0) {\n    return win.navigator.clipboard.writeText(text);\n  }\n  if (!doc.body) {\n    return Promise.reject(new Error());\n  }\n  const node = createNode(doc, text);\n  doc.body.appendChild(node);\n  copyNode(node);\n  doc.body.removeChild(node);\n  return Promise.resolve();\n}\n\n// src/clipboard.connect.ts\nfunction connect(state, send, normalize) {\n  const copied = state.matches(\"copied\");\n  return {\n    copied,\n    value: state.context.value,\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    copy() {\n      send({\n        type: \"COPY\"\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-copied\": dataAttr(copied),\n        id: dom.getRootId(state.context)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        htmlFor: dom.getInputId(state.context),\n        \"data-copied\": dataAttr(copied),\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-copied\": dataAttr(copied)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        defaultValue: state.context.value,\n        \"data-copied\": dataAttr(copied),\n        readOnly: true,\n        \"data-readonly\": \"true\",\n        id: dom.getInputId(state.context),\n        onFocus(event) {\n          event.currentTarget.select();\n        },\n        onCopy() {\n          send({\n            type: \"INPUT.COPY\"\n          });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        \"aria-label\": copied ? \"Copied to clipboard\" : \"Copy to clipboard\",\n        \"data-copied\": dataAttr(copied),\n        onClick() {\n          send({\n            type: \"COPY\"\n          });\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        hidden: props2.copied !== copied\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"clipboard\",\n    initial: \"idle\",\n    context: {\n      value: \"\",\n      timeout: 3e3,\n      ...ctx\n    },\n    watch: {\n      value: [\"syncInputElement\"]\n    },\n    on: {\n      \"VALUE.SET\": {\n        actions: [\"setValue\"]\n      },\n      COPY: {\n        target: \"copied\",\n        actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n      }\n    },\n    states: {\n      idle: {\n        on: {\n          \"INPUT.COPY\": {\n            target: \"copied\",\n            actions: [\"invokeOnCopy\"]\n          }\n        }\n      },\n      copied: {\n        after: {\n          COPY_TIMEOUT: \"idle\"\n        },\n        on: {\n          COPY: {\n            target: \"copied\",\n            actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n          },\n          \"INPUT.COPY\": {\n            actions: [\"invokeOnCopy\"]\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      setValue(ctx2, evt) {\n        ctx2.value = evt.value;\n      },\n      copyToClipboard(ctx2) {\n        dom.writeToClipboard(ctx2);\n      },\n      invokeOnCopy(ctx2) {\n        ctx2.onStatusChange?.({\n          copied: true\n        });\n      },\n      syncInputElement(ctx2) {\n        dom.setValue(dom.getInputEl(ctx2), ctx2.value);\n      }\n    },\n    delays: {\n      COPY_TIMEOUT: ctx2 => ctx2.timeout\n    }\n  });\n}\nvar props = createProps()([\"getRootNode\", \"id\", \"ids\", \"value\", \"timeout\", \"onStatusChange\"]);\nvar contextProps = createSplitProps(props);\nvar indicatorProps = createProps()([\"copied\"]);\nvar splitIndicatorProps = createSplitProps(indicatorProps);\nexport { anatomy, connect, contextProps, indicatorProps, machine, props, splitIndicatorProps };","map":{"version":3,"names":["createAnatomy","createScope","getWindow","dataAttr","createMachine","createSplitProps","compact","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getInputId","input","getLabelId","label","getInputEl","getById","writeToClipboard","copyText","getDoc","value","createNode","doc","text","node","createElement","Object","assign","style","width","height","position","top","textContent","copyNode","win","selection","getSelection","Promise","reject","Error","removeAllRanges","ownerDocument","range","createRange","selectNodeContents","addRange","execCommand","resolve","defaultView","window","navigator","clipboard","writeText","body","appendChild","removeChild","connect","state","send","normalize","copied","matches","context","setValue","type","copy","getRootProps","element","attrs","getLabelProps","htmlFor","getControlProps","control","getInputProps","defaultValue","readOnly","onFocus","event","currentTarget","select","onCopy","getTriggerProps","button","trigger","onClick","getIndicatorProps","props2","indicator","hidden","machine","userContext","initial","timeout","watch","on","actions","COPY","target","states","idle","after","COPY_TIMEOUT","ctx2","evt","copyToClipboard","invokeOnCopy","onStatusChange","syncInputElement","delays","props","contextProps","indicatorProps","splitIndicatorProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/clipboard/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, getWindow, dataAttr } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/clipboard.anatomy.ts\nvar anatomy = createAnatomy(\"clipboard\").parts(\"root\", \"control\", \"trigger\", \"indicator\", \"input\", \"label\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `clip:${ctx.id}`,\n  getInputId: (ctx) => ctx.ids?.input ?? `clip:${ctx.id}:input`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `clip:${ctx.id}:label`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  writeToClipboard: (ctx) => copyText(dom.getDoc(ctx), ctx.value)\n});\nfunction createNode(doc, text) {\n  const node = doc.createElement(\"pre\");\n  Object.assign(node.style, {\n    width: \"1px\",\n    height: \"1px\",\n    position: \"fixed\",\n    top: \"5px\"\n  });\n  node.textContent = text;\n  return node;\n}\nfunction copyNode(node) {\n  const win = getWindow(node);\n  const selection = win.getSelection();\n  if (selection == null) {\n    return Promise.reject(new Error());\n  }\n  selection.removeAllRanges();\n  const doc = node.ownerDocument;\n  const range = doc.createRange();\n  range.selectNodeContents(node);\n  selection.addRange(range);\n  doc.execCommand(\"copy\");\n  selection.removeAllRanges();\n  return Promise.resolve();\n}\nfunction copyText(doc, text) {\n  const win = doc.defaultView || window;\n  if (win.navigator.clipboard?.writeText !== void 0) {\n    return win.navigator.clipboard.writeText(text);\n  }\n  if (!doc.body) {\n    return Promise.reject(new Error());\n  }\n  const node = createNode(doc, text);\n  doc.body.appendChild(node);\n  copyNode(node);\n  doc.body.removeChild(node);\n  return Promise.resolve();\n}\n\n// src/clipboard.connect.ts\nfunction connect(state, send, normalize) {\n  const copied = state.matches(\"copied\");\n  return {\n    copied,\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    copy() {\n      send({ type: \"COPY\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-copied\": dataAttr(copied),\n        id: dom.getRootId(state.context)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        htmlFor: dom.getInputId(state.context),\n        \"data-copied\": dataAttr(copied),\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-copied\": dataAttr(copied)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        defaultValue: state.context.value,\n        \"data-copied\": dataAttr(copied),\n        readOnly: true,\n        \"data-readonly\": \"true\",\n        id: dom.getInputId(state.context),\n        onFocus(event) {\n          event.currentTarget.select();\n        },\n        onCopy() {\n          send({ type: \"INPUT.COPY\" });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        \"aria-label\": copied ? \"Copied to clipboard\" : \"Copy to clipboard\",\n        \"data-copied\": dataAttr(copied),\n        onClick() {\n          send({ type: \"COPY\" });\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        hidden: props2.copied !== copied\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"clipboard\",\n      initial: \"idle\",\n      context: {\n        value: \"\",\n        timeout: 3e3,\n        ...ctx\n      },\n      watch: {\n        value: [\"syncInputElement\"]\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        COPY: {\n          target: \"copied\",\n          actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"INPUT.COPY\": {\n              target: \"copied\",\n              actions: [\"invokeOnCopy\"]\n            }\n          }\n        },\n        copied: {\n          after: {\n            COPY_TIMEOUT: \"idle\"\n          },\n          on: {\n            COPY: {\n              target: \"copied\",\n              actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n            },\n            \"INPUT.COPY\": {\n              actions: [\"invokeOnCopy\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        setValue(ctx2, evt) {\n          ctx2.value = evt.value;\n        },\n        copyToClipboard(ctx2) {\n          dom.writeToClipboard(ctx2);\n        },\n        invokeOnCopy(ctx2) {\n          ctx2.onStatusChange?.({ copied: true });\n        },\n        syncInputElement(ctx2) {\n          dom.setValue(dom.getInputEl(ctx2), ctx2.value);\n        }\n      },\n      delays: {\n        COPY_TIMEOUT: (ctx2) => ctx2.timeout\n      }\n    }\n  );\n}\nvar props = createProps()([\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"value\",\n  \"timeout\",\n  \"onStatusChange\"\n]);\nvar contextProps = createSplitProps(props);\nvar indicatorProps = createProps()([\"copied\"]);\nvar splitIndicatorProps = createSplitProps(indicatorProps);\n\nexport { anatomy, connect, contextProps, indicatorProps, machine, props, splitIndicatorProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}