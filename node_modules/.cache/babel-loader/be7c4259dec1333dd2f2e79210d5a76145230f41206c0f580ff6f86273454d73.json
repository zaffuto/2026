{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, raf, getComputedStyle } from '@zag-js/dom-query';\nimport { ariaHidden } from '@zag-js/aria-hidden';\nimport { createMachine } from '@zag-js/core';\nimport { trackDismissableElement } from '@zag-js/dismissable';\nimport { trapFocus } from '@zag-js/focus-trap';\nimport { preventBodyScroll } from '@zag-js/remove-scroll';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/dialog.anatomy.ts\nvar anatomy = createAnatomy(\"dialog\").parts(\"trigger\", \"backdrop\", \"positioner\", \"content\", \"title\", \"description\", \"closeTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getPositionerId: ctx => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`,\n  getBackdropId: ctx => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`,\n  getContentId: ctx => ctx.ids?.content ?? `dialog:${ctx.id}:content`,\n  getTriggerId: ctx => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`,\n  getTitleId: ctx => ctx.ids?.title ?? `dialog:${ctx.id}:title`,\n  getDescriptionId: ctx => ctx.ids?.description ?? `dialog:${ctx.id}:description`,\n  getCloseTriggerId: ctx => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`,\n  getContentEl: ctx => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: ctx => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getBackdropEl: ctx => dom.getById(ctx, dom.getBackdropId(ctx)),\n  getTriggerEl: ctx => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getTitleEl: ctx => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: ctx => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getCloseTriggerEl: ctx => dom.getById(ctx, dom.getCloseTriggerId(ctx))\n});\n\n// src/dialog.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const open = state.matches(\"open\");\n  const rendered = state.context.renderedElements;\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        id: dom.getBackdropId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        role: state.context.role,\n        hidden: !open,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : dom.getTitleId(state.context),\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: state.context.dir,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: state.context.dir,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"dialog\",\n    initial: ctx.open ? \"open\" : \"closed\",\n    context: {\n      role: \"dialog\",\n      renderedElements: {\n        title: true,\n        description: true\n      },\n      modal: true,\n      trapFocus: true,\n      preventScroll: true,\n      closeOnInteractOutside: true,\n      closeOnEscape: true,\n      restoreFocus: true,\n      ...ctx\n    },\n    created: [\"setAlertDialogProps\"],\n    watch: {\n      open: [\"toggleVisibility\"]\n    },\n    states: {\n      open: {\n        entry: [\"checkRenderedElements\", \"syncZIndex\"],\n        activities: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n        on: {\n          \"CONTROLLED.CLOSE\": {\n            target: \"closed\"\n          },\n          CLOSE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }],\n          TOGGLE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }]\n        }\n      },\n      closed: {\n        on: {\n          \"CONTROLLED.OPEN\": {\n            target: \"open\"\n          },\n          OPEN: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }],\n          TOGGLE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }]\n        }\n      }\n    }\n  }, {\n    guards: {\n      isOpenControlled: ctx2 => !!ctx2[\"open.controlled\"]\n    },\n    activities: {\n      trackDismissableElement(ctx2, _evt, {\n        send\n      }) {\n        const getContentEl = () => dom.getContentEl(ctx2);\n        return trackDismissableElement(getContentEl, {\n          defer: true,\n          pointerBlocking: ctx2.modal,\n          exclude: [dom.getTriggerEl(ctx2)],\n          onInteractOutside(event) {\n            ctx2.onInteractOutside?.(event);\n            if (!ctx2.closeOnInteractOutside) {\n              event.preventDefault();\n            }\n          },\n          persistentElements: ctx2.persistentElements,\n          onFocusOutside: ctx2.onFocusOutside,\n          onPointerDownOutside: ctx2.onPointerDownOutside,\n          onEscapeKeyDown(event) {\n            ctx2.onEscapeKeyDown?.(event);\n            if (!ctx2.closeOnEscape) {\n              event.preventDefault();\n            }\n          },\n          onDismiss() {\n            send({\n              type: \"CLOSE\",\n              src: \"interact-outside\"\n            });\n          }\n        });\n      },\n      preventScroll(ctx2) {\n        if (!ctx2.preventScroll) return;\n        return preventBodyScroll(dom.getDoc(ctx2));\n      },\n      trapFocus(ctx2) {\n        if (!ctx2.trapFocus || !ctx2.modal) return;\n        const contentEl = () => dom.getContentEl(ctx2);\n        return trapFocus(contentEl, {\n          preventScroll: true,\n          returnFocusOnDeactivate: !!ctx2.restoreFocus,\n          initialFocus: ctx2.initialFocusEl,\n          setReturnFocus: el => ctx2.finalFocusEl?.() ?? el\n        });\n      },\n      hideContentBelow(ctx2) {\n        if (!ctx2.modal) return;\n        const getElements = () => [dom.getContentEl(ctx2)];\n        return ariaHidden(getElements, {\n          defer: true\n        });\n      }\n    },\n    actions: {\n      setAlertDialogProps(ctx2) {\n        if (ctx2.role !== \"alertdialog\") return;\n        ctx2.initialFocusEl || (ctx2.initialFocusEl = () => dom.getCloseTriggerEl(ctx2));\n        ctx2.closeOnInteractOutside = false;\n      },\n      checkRenderedElements(ctx2) {\n        raf(() => {\n          ctx2.renderedElements.title = !!dom.getTitleEl(ctx2);\n          ctx2.renderedElements.description = !!dom.getDescriptionEl(ctx2);\n        });\n      },\n      syncZIndex(ctx2) {\n        raf(() => {\n          const contentEl = dom.getContentEl(ctx2);\n          if (!contentEl) return;\n          const styles = getComputedStyle(contentEl);\n          const elems = [dom.getPositionerEl(ctx2), dom.getBackdropEl(ctx2)];\n          elems.forEach(node => {\n            node?.style.setProperty(\"--z-index\", styles.zIndex);\n          });\n        });\n      },\n      invokeOnClose(ctx2) {\n        ctx2.onOpenChange?.({\n          open: false\n        });\n      },\n      invokeOnOpen(ctx2) {\n        ctx2.onOpenChange?.({\n          open: true\n        });\n      },\n      toggleVisibility(ctx2, evt, {\n        send\n      }) {\n        send({\n          type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: evt\n        });\n      }\n    }\n  });\n}\nvar props = createProps()([\"aria-label\", \"closeOnEscape\", \"closeOnInteractOutside\", \"dir\", \"finalFocusEl\", \"getRootNode\", \"getRootNode\", \"id\", \"id\", \"ids\", \"initialFocusEl\", \"modal\", \"onEscapeKeyDown\", \"onFocusOutside\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"open.controlled\", \"open\", \"persistentElements\", \"preventScroll\", \"restoreFocus\", \"role\", \"trapFocus\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","raf","getComputedStyle","ariaHidden","createMachine","trackDismissableElement","trapFocus","preventBodyScroll","createSplitProps","compact","createProps","anatomy","parts","build","dom","getPositionerId","ctx","ids","positioner","id","getBackdropId","backdrop","getContentId","content","getTriggerId","trigger","getTitleId","title","getDescriptionId","description","getCloseTriggerId","closeTrigger","getContentEl","getById","getPositionerEl","getBackdropEl","getTriggerEl","getTitleEl","getDescriptionEl","getCloseTriggerEl","connect","state","send","normalize","ariaLabel","context","open","matches","rendered","renderedElements","setOpen","nextOpen","getTriggerProps","button","attrs","dir","type","onClick","event","defaultPrevented","getBackdropProps","element","hidden","getPositionerProps","style","pointerEvents","getContentProps","role","tabIndex","getTitleProps","getDescriptionProps","getCloseTriggerProps","stopPropagation","machine","userContext","initial","modal","preventScroll","closeOnInteractOutside","closeOnEscape","restoreFocus","created","watch","states","entry","activities","on","target","CLOSE","guard","actions","TOGGLE","closed","OPEN","guards","isOpenControlled","ctx2","_evt","defer","pointerBlocking","exclude","onInteractOutside","preventDefault","persistentElements","onFocusOutside","onPointerDownOutside","onEscapeKeyDown","onDismiss","src","getDoc","contentEl","returnFocusOnDeactivate","initialFocus","initialFocusEl","setReturnFocus","el","finalFocusEl","hideContentBelow","getElements","setAlertDialogProps","checkRenderedElements","syncZIndex","styles","elems","forEach","node","setProperty","zIndex","invokeOnClose","onOpenChange","invokeOnOpen","toggleVisibility","evt","previousEvent","props","splitProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/dialog/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, raf, getComputedStyle } from '@zag-js/dom-query';\nimport { ariaHidden } from '@zag-js/aria-hidden';\nimport { createMachine } from '@zag-js/core';\nimport { trackDismissableElement } from '@zag-js/dismissable';\nimport { trapFocus } from '@zag-js/focus-trap';\nimport { preventBodyScroll } from '@zag-js/remove-scroll';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/dialog.anatomy.ts\nvar anatomy = createAnatomy(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`,\n  getBackdropId: (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`,\n  getContentId: (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`,\n  getTitleId: (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`,\n  getDescriptionId: (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`,\n  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getBackdropEl: (ctx) => dom.getById(ctx, dom.getBackdropId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getCloseTriggerEl: (ctx) => dom.getById(ctx, dom.getCloseTriggerId(ctx))\n});\n\n// src/dialog.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const open = state.matches(\"open\");\n  const rendered = state.context.renderedElements;\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        id: dom.getBackdropId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        role: state.context.role,\n        hidden: !open,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : dom.getTitleId(state.context),\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: state.context.dir,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: state.context.dir,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"dialog\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        role: \"dialog\",\n        renderedElements: {\n          title: true,\n          description: true\n        },\n        modal: true,\n        trapFocus: true,\n        preventScroll: true,\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        restoreFocus: true,\n        ...ctx\n      },\n      created: [\"setAlertDialogProps\"],\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        open: {\n          entry: [\"checkRenderedElements\", \"syncZIndex\"],\n          activities: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\"\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\"\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return trackDismissableElement(getContentEl, {\n            defer: true,\n            pointerBlocking: ctx2.modal,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (!ctx2.closeOnInteractOutside) {\n                event.preventDefault();\n              }\n            },\n            persistentElements: ctx2.persistentElements,\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (!ctx2.closeOnEscape) {\n                event.preventDefault();\n              }\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" });\n            }\n          });\n        },\n        preventScroll(ctx2) {\n          if (!ctx2.preventScroll) return;\n          return preventBodyScroll(dom.getDoc(ctx2));\n        },\n        trapFocus(ctx2) {\n          if (!ctx2.trapFocus || !ctx2.modal) return;\n          const contentEl = () => dom.getContentEl(ctx2);\n          return trapFocus(contentEl, {\n            preventScroll: true,\n            returnFocusOnDeactivate: !!ctx2.restoreFocus,\n            initialFocus: ctx2.initialFocusEl,\n            setReturnFocus: (el) => ctx2.finalFocusEl?.() ?? el\n          });\n        },\n        hideContentBelow(ctx2) {\n          if (!ctx2.modal) return;\n          const getElements = () => [dom.getContentEl(ctx2)];\n          return ariaHidden(getElements, { defer: true });\n        }\n      },\n      actions: {\n        setAlertDialogProps(ctx2) {\n          if (ctx2.role !== \"alertdialog\") return;\n          ctx2.initialFocusEl || (ctx2.initialFocusEl = () => dom.getCloseTriggerEl(ctx2));\n          ctx2.closeOnInteractOutside = false;\n        },\n        checkRenderedElements(ctx2) {\n          raf(() => {\n            ctx2.renderedElements.title = !!dom.getTitleEl(ctx2);\n            ctx2.renderedElements.description = !!dom.getDescriptionEl(ctx2);\n          });\n        },\n        syncZIndex(ctx2) {\n          raf(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const styles = getComputedStyle(contentEl);\n            const elems = [dom.getPositionerEl(ctx2), dom.getBackdropEl(ctx2)];\n            elems.forEach((node) => {\n              node?.style.setProperty(\"--z-index\", styles.zIndex);\n            });\n          });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nvar props = createProps()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}