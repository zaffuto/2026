{"ast":null,"code":"\"use strict\";\n\nimport { tagAnatomy } from '../../anatomy.js';\nimport { defineSlotRecipe } from '../../styled-system/config.js';\nimport { badgeRecipe } from './badge.js';\nconst badgeVariant = badgeRecipe.variants?.variant;\nconst tagSlotRecipe = defineSlotRecipe({\n  slots: tagAnatomy.keys(),\n  className: \"chakra-tag\",\n  base: {\n    root: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      verticalAlign: \"top\",\n      maxWidth: \"100%\",\n      userSelect: \"none\",\n      borderRadius: \"l2\",\n      focusVisibleRing: \"outside\"\n    },\n    label: {\n      lineClamp: \"1\"\n    },\n    closeTrigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      borderRadius: \"l1\",\n      color: \"currentColor\",\n      focusVisibleRing: \"inside\",\n      focusRingWidth: \"2px\"\n    },\n    startElement: {\n      flexShrink: 0,\n      boxSize: \"var(--tag-element-size)\",\n      ms: \"var(--tag-element-offset)\",\n      \"&:has([data-scope=avatar])\": {\n        boxSize: \"var(--tag-avatar-size)\",\n        ms: \"calc(var(--tag-element-offset) * 1.5)\"\n      },\n      _icon: {\n        boxSize: \"100%\"\n      }\n    },\n    endElement: {\n      flexShrink: 0,\n      boxSize: \"var(--tag-element-size)\",\n      me: \"var(--tag-element-offset)\",\n      _icon: {\n        boxSize: \"100%\"\n      },\n      \"&:has(button)\": {\n        ms: \"calc(var(--tag-element-offset) * -1)\"\n      }\n    }\n  },\n  variants: {\n    size: {\n      sm: {\n        root: {\n          px: \"1.5\",\n          minH: \"4.5\",\n          gap: \"1\",\n          \"--tag-avatar-size\": \"spacing.3\",\n          \"--tag-element-size\": \"spacing.3\",\n          \"--tag-element-offset\": \"-2px\"\n        },\n        label: {\n          textStyle: \"xs\"\n        }\n      },\n      md: {\n        root: {\n          px: \"1.5\",\n          minH: \"5\",\n          gap: \"1\",\n          \"--tag-avatar-size\": \"spacing.3.5\",\n          \"--tag-element-size\": \"spacing.3.5\",\n          \"--tag-element-offset\": \"-2px\"\n        },\n        label: {\n          textStyle: \"xs\"\n        }\n      },\n      lg: {\n        root: {\n          px: \"2\",\n          minH: \"6\",\n          gap: \"1.5\",\n          \"--tag-avatar-size\": \"spacing.4.5\",\n          \"--tag-element-size\": \"spacing.4\",\n          \"--tag-element-offset\": \"-3px\"\n        },\n        label: {\n          textStyle: \"sm\"\n        }\n      },\n      xl: {\n        root: {\n          px: \"2.5\",\n          minH: \"8\",\n          gap: \"1.5\",\n          \"--tag-avatar-size\": \"spacing.6\",\n          \"--tag-element-size\": \"spacing.4.5\",\n          \"--tag-element-offset\": \"-4px\"\n        },\n        label: {\n          textStyle: \"sm\"\n        }\n      }\n    },\n    variant: {\n      subtle: {\n        root: badgeVariant?.subtle\n      },\n      solid: {\n        root: badgeVariant?.solid\n      },\n      outline: {\n        root: badgeVariant?.outline\n      },\n      surface: {\n        root: badgeVariant?.surface\n      }\n    }\n  },\n  defaultVariants: {\n    size: \"md\",\n    variant: \"surface\"\n  }\n});\nexport { tagSlotRecipe };","map":{"version":3,"names":["tagAnatomy","defineSlotRecipe","badgeRecipe","badgeVariant","variants","variant","tagSlotRecipe","slots","keys","className","base","root","display","alignItems","verticalAlign","maxWidth","userSelect","borderRadius","focusVisibleRing","label","lineClamp","closeTrigger","justifyContent","outline","color","focusRingWidth","startElement","flexShrink","boxSize","ms","_icon","endElement","me","size","sm","px","minH","gap","textStyle","md","lg","xl","subtle","solid","surface","defaultVariants"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tag.js"],"sourcesContent":["\"use strict\";\nimport { tagAnatomy } from '../../anatomy.js';\nimport { defineSlotRecipe } from '../../styled-system/config.js';\nimport { badgeRecipe } from './badge.js';\n\nconst badgeVariant = badgeRecipe.variants?.variant;\nconst tagSlotRecipe = defineSlotRecipe({\n  slots: tagAnatomy.keys(),\n  className: \"chakra-tag\",\n  base: {\n    root: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      verticalAlign: \"top\",\n      maxWidth: \"100%\",\n      userSelect: \"none\",\n      borderRadius: \"l2\",\n      focusVisibleRing: \"outside\"\n    },\n    label: {\n      lineClamp: \"1\"\n    },\n    closeTrigger: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      borderRadius: \"l1\",\n      color: \"currentColor\",\n      focusVisibleRing: \"inside\",\n      focusRingWidth: \"2px\"\n    },\n    startElement: {\n      flexShrink: 0,\n      boxSize: \"var(--tag-element-size)\",\n      ms: \"var(--tag-element-offset)\",\n      \"&:has([data-scope=avatar])\": {\n        boxSize: \"var(--tag-avatar-size)\",\n        ms: \"calc(var(--tag-element-offset) * 1.5)\"\n      },\n      _icon: { boxSize: \"100%\" }\n    },\n    endElement: {\n      flexShrink: 0,\n      boxSize: \"var(--tag-element-size)\",\n      me: \"var(--tag-element-offset)\",\n      _icon: { boxSize: \"100%\" },\n      \"&:has(button)\": {\n        ms: \"calc(var(--tag-element-offset) * -1)\"\n      }\n    }\n  },\n  variants: {\n    size: {\n      sm: {\n        root: {\n          px: \"1.5\",\n          minH: \"4.5\",\n          gap: \"1\",\n          \"--tag-avatar-size\": \"spacing.3\",\n          \"--tag-element-size\": \"spacing.3\",\n          \"--tag-element-offset\": \"-2px\"\n        },\n        label: {\n          textStyle: \"xs\"\n        }\n      },\n      md: {\n        root: {\n          px: \"1.5\",\n          minH: \"5\",\n          gap: \"1\",\n          \"--tag-avatar-size\": \"spacing.3.5\",\n          \"--tag-element-size\": \"spacing.3.5\",\n          \"--tag-element-offset\": \"-2px\"\n        },\n        label: {\n          textStyle: \"xs\"\n        }\n      },\n      lg: {\n        root: {\n          px: \"2\",\n          minH: \"6\",\n          gap: \"1.5\",\n          \"--tag-avatar-size\": \"spacing.4.5\",\n          \"--tag-element-size\": \"spacing.4\",\n          \"--tag-element-offset\": \"-3px\"\n        },\n        label: {\n          textStyle: \"sm\"\n        }\n      },\n      xl: {\n        root: {\n          px: \"2.5\",\n          minH: \"8\",\n          gap: \"1.5\",\n          \"--tag-avatar-size\": \"spacing.6\",\n          \"--tag-element-size\": \"spacing.4.5\",\n          \"--tag-element-offset\": \"-4px\"\n        },\n        label: {\n          textStyle: \"sm\"\n        }\n      }\n    },\n    variant: {\n      subtle: {\n        root: badgeVariant?.subtle\n      },\n      solid: {\n        root: badgeVariant?.solid\n      },\n      outline: {\n        root: badgeVariant?.outline\n      },\n      surface: {\n        root: badgeVariant?.surface\n      }\n    }\n  },\n  defaultVariants: {\n    size: \"md\",\n    variant: \"surface\"\n  }\n});\n\nexport { tagSlotRecipe };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}