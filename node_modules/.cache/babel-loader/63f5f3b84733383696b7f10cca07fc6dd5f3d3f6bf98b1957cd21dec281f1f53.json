{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\nconst isImportant = value => /!(important)?$/.test(value);\nconst withoutImportant = value => typeof value === \"string\" ? value.replace(/!(important)?$/, \"\").trim() : value;\nconst tokenToCSSVar = (scale, value) => theme => {\n  const valueStr = String(value);\n  const important = isImportant(valueStr);\n  const valueWithoutImportant = withoutImportant(valueStr);\n  const key = scale ? \"\".concat(scale, \".\").concat(valueWithoutImportant) : valueWithoutImportant;\n  let transformed = isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n  transformed = withoutImportant(transformed);\n  return important ? \"\".concat(transformed, \" !important\") : transformed;\n};\nfunction createTransform(options) {\n  const {\n    scale,\n    transform,\n    compose\n  } = options;\n  const fn = (value, theme) => {\n    var _transform;\n    const _value = tokenToCSSVar(scale, value)(theme);\n    let result = (_transform = transform === null || transform === void 0 ? void 0 : transform(_value, theme)) !== null && _transform !== void 0 ? _transform : _value;\n    if (compose) {\n      result = compose(result, theme);\n    }\n    return result;\n  };\n  return fn;\n}\nexport { createTransform, tokenToCSSVar };","map":{"version":3,"names":["isObject","isImportant","value","test","withoutImportant","replace","trim","tokenToCSSVar","scale","theme","valueStr","String","important","valueWithoutImportant","key","concat","transformed","__cssMap","varRef","createTransform","options","transform","compose","fn","_transform","_value","result"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/styled-system/dist/esm/utils/create-transform.mjs"],"sourcesContent":["import { isObject } from '@chakra-ui/utils';\n\nconst isImportant = (value) => /!(important)?$/.test(value);\nconst withoutImportant = (value) => typeof value === \"string\" ? value.replace(/!(important)?$/, \"\").trim() : value;\nconst tokenToCSSVar = (scale, value) => (theme) => {\n  const valueStr = String(value);\n  const important = isImportant(valueStr);\n  const valueWithoutImportant = withoutImportant(valueStr);\n  const key = scale ? `${scale}.${valueWithoutImportant}` : valueWithoutImportant;\n  let transformed = isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n  transformed = withoutImportant(transformed);\n  return important ? `${transformed} !important` : transformed;\n};\nfunction createTransform(options) {\n  const { scale, transform, compose } = options;\n  const fn = (value, theme) => {\n    const _value = tokenToCSSVar(scale, value)(theme);\n    let result = transform?.(_value, theme) ?? _value;\n    if (compose) {\n      result = compose(result, theme);\n    }\n    return result;\n  };\n  return fn;\n}\n\nexport { createTransform, tokenToCSSVar };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,WAAW,GAAIC,KAAK,IAAK,gBAAgB,CAACC,IAAI,CAACD,KAAK,CAAC;AAC3D,MAAME,gBAAgB,GAAIF,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACG,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,GAAGJ,KAAK;AAClH,MAAMK,aAAa,GAAGA,CAACC,KAAK,EAAEN,KAAK,KAAMO,KAAK,IAAK;EACjD,MAAMC,QAAQ,GAAGC,MAAM,CAACT,KAAK,CAAC;EAC9B,MAAMU,SAAS,GAAGX,WAAW,CAACS,QAAQ,CAAC;EACvC,MAAMG,qBAAqB,GAAGT,gBAAgB,CAACM,QAAQ,CAAC;EACxD,MAAMI,GAAG,GAAGN,KAAK,MAAAO,MAAA,CAAMP,KAAK,OAAAO,MAAA,CAAIF,qBAAqB,IAAKA,qBAAqB;EAC/E,IAAIG,WAAW,GAAGhB,QAAQ,CAACS,KAAK,CAACQ,QAAQ,CAAC,IAAIH,GAAG,IAAIL,KAAK,CAACQ,QAAQ,GAAGR,KAAK,CAACQ,QAAQ,CAACH,GAAG,CAAC,CAACI,MAAM,GAAGhB,KAAK;EACxGc,WAAW,GAAGZ,gBAAgB,CAACY,WAAW,CAAC;EAC3C,OAAOJ,SAAS,MAAAG,MAAA,CAAMC,WAAW,mBAAgBA,WAAW;AAC9D,CAAC;AACD,SAASG,eAAeA,CAACC,OAAO,EAAE;EAChC,MAAM;IAAEZ,KAAK;IAAEa,SAAS;IAAEC;EAAQ,CAAC,GAAGF,OAAO;EAC7C,MAAMG,EAAE,GAAGA,CAACrB,KAAK,EAAEO,KAAK,KAAK;IAAA,IAAAe,UAAA;IAC3B,MAAMC,MAAM,GAAGlB,aAAa,CAACC,KAAK,EAAEN,KAAK,CAAC,CAACO,KAAK,CAAC;IACjD,IAAIiB,MAAM,IAAAF,UAAA,GAAGH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGI,MAAM,EAAEhB,KAAK,CAAC,cAAAe,UAAA,cAAAA,UAAA,GAAIC,MAAM;IACjD,IAAIH,OAAO,EAAE;MACXI,MAAM,GAAGJ,OAAO,CAACI,MAAM,EAAEjB,KAAK,CAAC;IACjC;IACA,OAAOiB,MAAM;EACf,CAAC;EACD,OAAOH,EAAE;AACX;AAEA,SAASJ,eAAe,EAAEZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}