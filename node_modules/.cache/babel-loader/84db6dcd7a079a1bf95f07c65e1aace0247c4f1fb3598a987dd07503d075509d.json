{"ast":null,"code":"'use client';\n\nimport * as qrcode from '@zag-js/qr-code';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useQrCode = (props = {}) => {\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    value: props.defaultValue,\n    getRootNode,\n    onValueChange: useEvent(props.onValueChange, {\n      sync: true\n    }),\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, {\n      sync: true\n    })\n  };\n  const [state, send] = useMachine(qrcode.machine(initialContext), {\n    context\n  });\n  return qrcode.connect(state, send, normalizeProps);\n};\nexport { useQrCode };","map":{"version":3,"names":["qrcode","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useEvent","useQrCode","props","getRootNode","dir","initialContext","id","value","defaultValue","onValueChange","sync","context","state","send","machine","connect"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/qr-code/use-qr-code.js"],"sourcesContent":["'use client';\nimport * as qrcode from '@zag-js/qr-code';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useQrCode = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    value: props.defaultValue,\n    getRootNode,\n    onValueChange: useEvent(props.onValueChange, { sync: true }),\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, { sync: true })\n  };\n  const [state, send] = useMachine(qrcode.machine(initialContext), { context });\n  return qrcode.connect(state, send, normalizeProps);\n};\n\nexport { useQrCode };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,MAAM,MAAM,iBAAiB;AACzC,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,SAAS,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EAChC,MAAM;IAAEC;EAAY,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEM;EAAI,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAClC,MAAMM,cAAc,GAAG;IACrBC,EAAE,EAAET,KAAK,CAAC,CAAC;IACXO,GAAG;IACHG,KAAK,EAAEL,KAAK,CAACM,YAAY;IACzBL,WAAW;IACXM,aAAa,EAAET,QAAQ,CAACE,KAAK,CAACO,aAAa,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAC5D,GAAGR;EACL,CAAC;EACD,MAAMS,OAAO,GAAG;IACd,GAAGN,cAAc;IACjBE,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBE,aAAa,EAAET,QAAQ,CAACE,KAAK,CAACO,aAAa,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;EAC7D,CAAC;EACD,MAAM,CAACE,KAAK,EAAEC,IAAI,CAAC,GAAGlB,UAAU,CAACD,MAAM,CAACoB,OAAO,CAACT,cAAc,CAAC,EAAE;IAAEM;EAAQ,CAAC,CAAC;EAC7E,OAAOjB,MAAM,CAACqB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEjB,cAAc,CAAC;AACpD,CAAC;AAED,SAASK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}