{"ast":null,"code":"'use client';\n\nimport * as checkbox from '@zag-js/checkbox';\nimport { mergeProps, useMachine, normalizeProps } from '@zag-js/react';\nimport { useMemo, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nimport { useCheckboxGroupContext } from './use-checkbox-group-context.js';\nconst useCheckbox = (ownProps = {}) => {\n  const checkboxGroup = useCheckboxGroupContext();\n  const field = useFieldContext();\n  const props = useMemo(() => {\n    return mergeProps(ownProps, checkboxGroup?.getItemProps({\n      value: ownProps.value\n    }) ?? {});\n  }, [ownProps, checkboxGroup]);\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    invalid: field?.invalid,\n    required: field?.required,\n    getRootNode,\n    checked: props.defaultChecked,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    checked: props.checked,\n    onCheckedChange: useEvent(props.onCheckedChange, {\n      sync: true\n    })\n  };\n  const [state, send] = useMachine(checkbox.machine(initialContext), {\n    context\n  });\n  return checkbox.connect(state, send, normalizeProps);\n};\nexport { useCheckbox };","map":{"version":3,"names":["checkbox","mergeProps","useMachine","normalizeProps","useMemo","useId","useEnvironmentContext","useLocaleContext","useEvent","useFieldContext","useCheckboxGroupContext","useCheckbox","ownProps","checkboxGroup","field","props","getItemProps","value","getRootNode","dir","initialContext","id","ids","label","hiddenInput","control","disabled","readOnly","invalid","required","checked","defaultChecked","context","onCheckedChange","sync","state","send","machine","connect"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/checkbox/use-checkbox.js"],"sourcesContent":["'use client';\nimport * as checkbox from '@zag-js/checkbox';\nimport { mergeProps, useMachine, normalizeProps } from '@zag-js/react';\nimport { useMemo, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nimport { useCheckboxGroupContext } from './use-checkbox-group-context.js';\n\nconst useCheckbox = (ownProps = {}) => {\n  const checkboxGroup = useCheckboxGroupContext();\n  const field = useFieldContext();\n  const props = useMemo(() => {\n    return mergeProps(ownProps, checkboxGroup?.getItemProps({ value: ownProps.value }) ?? {});\n  }, [ownProps, checkboxGroup]);\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    invalid: field?.invalid,\n    required: field?.required,\n    getRootNode,\n    checked: props.defaultChecked,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    checked: props.checked,\n    onCheckedChange: useEvent(props.onCheckedChange, { sync: true })\n  };\n  const [state, send] = useMachine(checkbox.machine(initialContext), { context });\n  return checkbox.connect(state, send, normalizeProps);\n};\n\nexport { useCheckbox };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AACtE,SAASC,OAAO,EAAEC,KAAK,QAAQ,OAAO;AACtC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,uBAAuB,QAAQ,iCAAiC;AAEzE,MAAMC,WAAW,GAAGA,CAACC,QAAQ,GAAG,CAAC,CAAC,KAAK;EACrC,MAAMC,aAAa,GAAGH,uBAAuB,CAAC,CAAC;EAC/C,MAAMI,KAAK,GAAGL,eAAe,CAAC,CAAC;EAC/B,MAAMM,KAAK,GAAGX,OAAO,CAAC,MAAM;IAC1B,OAAOH,UAAU,CAACW,QAAQ,EAAEC,aAAa,EAAEG,YAAY,CAAC;MAAEC,KAAK,EAAEL,QAAQ,CAACK;IAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3F,CAAC,EAAE,CAACL,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAC7B,MAAM;IAAEK;EAAY,CAAC,GAAGZ,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEa;EAAI,CAAC,GAAGZ,gBAAgB,CAAC,CAAC;EAClC,MAAMa,cAAc,GAAG;IACrBC,EAAE,EAAEhB,KAAK,CAAC,CAAC;IACXiB,GAAG,EAAE;MACHC,KAAK,EAAET,KAAK,EAAEQ,GAAG,CAACC,KAAK;MACvBC,WAAW,EAAEV,KAAK,EAAEQ,GAAG,CAACG;IAC1B,CAAC;IACDN,GAAG;IACHO,QAAQ,EAAEZ,KAAK,EAAEY,QAAQ;IACzBC,QAAQ,EAAEb,KAAK,EAAEa,QAAQ;IACzBC,OAAO,EAAEd,KAAK,EAAEc,OAAO;IACvBC,QAAQ,EAAEf,KAAK,EAAEe,QAAQ;IACzBX,WAAW;IACXY,OAAO,EAAEf,KAAK,CAACgB,cAAc;IAC7B,GAAGhB;EACL,CAAC;EACD,MAAMiB,OAAO,GAAG;IACd,GAAGZ,cAAc;IACjBU,OAAO,EAAEf,KAAK,CAACe,OAAO;IACtBG,eAAe,EAAEzB,QAAQ,CAACO,KAAK,CAACkB,eAAe,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;EACjE,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGlC,UAAU,CAACF,QAAQ,CAACqC,OAAO,CAACjB,cAAc,CAAC,EAAE;IAAEY;EAAQ,CAAC,CAAC;EAC/E,OAAOhC,QAAQ,CAACsC,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEjC,cAAc,CAAC;AACtD,CAAC;AAED,SAASQ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}