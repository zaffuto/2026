{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useMenuTriggerItemContext } from './use-menu-trigger-item-context.js';\nconst MenuTriggerItem = forwardRef((props, ref) => {\n  const getTriggerItemProps = useMenuTriggerItemContext();\n  const mergedProps = mergeProps(getTriggerItemProps?.() ?? {}, props);\n  return /* @__PURE__ */jsx(ark.div, {\n    ...mergedProps,\n    ref\n  });\n});\nMenuTriggerItem.displayName = \"MenuTriggerItem\";\nexport { MenuTriggerItem };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useMenuTriggerItemContext","MenuTriggerItem","props","ref","getTriggerItemProps","mergedProps","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/menu/menu-trigger-item.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useMenuTriggerItemContext } from './use-menu-trigger-item-context.js';\n\nconst MenuTriggerItem = forwardRef((props, ref) => {\n  const getTriggerItemProps = useMenuTriggerItemContext();\n  const mergedProps = mergeProps(getTriggerItemProps?.() ?? {}, props);\n  return /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref });\n});\nMenuTriggerItem.displayName = \"MenuTriggerItem\";\n\nexport { MenuTriggerItem };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,yBAAyB,QAAQ,oCAAoC;AAE9E,MAAMC,eAAe,GAAGH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACjD,MAAMC,mBAAmB,GAAGJ,yBAAyB,CAAC,CAAC;EACvD,MAAMK,WAAW,GAAGR,UAAU,CAACO,mBAAmB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAEF,KAAK,CAAC;EACpE,OAAO,eAAgBN,GAAG,CAACG,GAAG,CAACO,GAAG,EAAE;IAAE,GAAGD,WAAW;IAAEF;EAAI,CAAC,CAAC;AAC9D,CAAC,CAAC;AACFF,eAAe,CAACM,WAAW,GAAG,iBAAiB;AAE/C,SAASN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}