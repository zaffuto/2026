{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useAccordion } from './use-accordion.js';\nimport { AccordionProvider } from './use-accordion-context.js';\nconst AccordionRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, accordionProps] = splitRenderStrategyProps(props);\n  const [useAccordionProps, localProps] = createSplitProps()(accordionProps, [\"collapsible\", \"defaultValue\", \"disabled\", \"id\", \"ids\", \"multiple\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"value\"]);\n  const accordion = useAccordion(useAccordionProps);\n  const mergedProps = mergeProps(accordion.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(AccordionProvider, {\n    value: accordion,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nAccordionRoot.displayName = \"AccordionRoot\";\nexport { AccordionRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","splitRenderStrategyProps","RenderStrategyPropsProvider","ark","useAccordion","AccordionProvider","AccordionRoot","props","ref","renderStrategyProps","accordionProps","useAccordionProps","localProps","accordion","mergedProps","getRootProps","value","children","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/accordion/accordion-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useAccordion } from './use-accordion.js';\nimport { AccordionProvider } from './use-accordion-context.js';\n\nconst AccordionRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, accordionProps] = splitRenderStrategyProps(props);\n  const [useAccordionProps, localProps] = createSplitProps()(accordionProps, [\n    \"collapsible\",\n    \"defaultValue\",\n    \"disabled\",\n    \"id\",\n    \"ids\",\n    \"multiple\",\n    \"onFocusChange\",\n    \"onValueChange\",\n    \"orientation\",\n    \"value\"\n  ]);\n  const accordion = useAccordion(useAccordionProps);\n  const mergedProps = mergeProps(accordion.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(AccordionProvider, { value: accordion, children: /* @__PURE__ */ jsx(RenderStrategyPropsProvider, { value: renderStrategyProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });\n});\nAccordionRoot.displayName = \"AccordionRoot\";\n\nexport { AccordionRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,wBAAwB,EAAEC,2BAA2B,QAAQ,gCAAgC;AACtG,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,iBAAiB,QAAQ,4BAA4B;AAE9D,MAAMC,aAAa,GAAGP,UAAU,CAAC,CAACQ,KAAK,EAAEC,GAAG,KAAK;EAC/C,MAAM,CAACC,mBAAmB,EAAEC,cAAc,CAAC,GAAGT,wBAAwB,CAACM,KAAK,CAAC;EAC7E,MAAM,CAACI,iBAAiB,EAAEC,UAAU,CAAC,GAAGZ,gBAAgB,CAAC,CAAC,CAACU,cAAc,EAAE,CACzE,aAAa,EACb,cAAc,EACd,UAAU,EACV,IAAI,EACJ,KAAK,EACL,UAAU,EACV,eAAe,EACf,eAAe,EACf,aAAa,EACb,OAAO,CACR,CAAC;EACF,MAAMG,SAAS,GAAGT,YAAY,CAACO,iBAAiB,CAAC;EACjD,MAAMG,WAAW,GAAGhB,UAAU,CAACe,SAAS,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACpE,OAAO,eAAgBf,GAAG,CAACQ,iBAAiB,EAAE;IAAEW,KAAK,EAAEH,SAAS;IAAEI,QAAQ,EAAE,eAAgBpB,GAAG,CAACK,2BAA2B,EAAE;MAAEc,KAAK,EAAEP,mBAAmB;MAAEQ,QAAQ,EAAE,eAAgBpB,GAAG,CAACM,GAAG,CAACe,GAAG,EAAE;QAAE,GAAGJ,WAAW;QAAEN;MAAI,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAClO,CAAC,CAAC;AACFF,aAAa,CAACa,WAAW,GAAG,eAAe;AAE3C,SAASb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}