{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"isInline\", \"direction\", \"align\", \"justify\", \"spacing\", \"wrap\", \"children\", \"divider\", \"className\", \"shouldWrapChildren\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { useMemo, cloneElement, Fragment } from 'react';\nimport { StackItem } from './stack-item.mjs';\nimport { getDividerStyles } from './stack.utils.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Stack = forwardRef((props, ref) => {\n  const {\n      isInline,\n      direction: directionProp,\n      align,\n      justify,\n      spacing = \"0.5rem\",\n      wrap,\n      children,\n      divider,\n      className,\n      shouldWrapChildren\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const direction = isInline ? \"row\" : directionProp !== null && directionProp !== void 0 ? directionProp : \"column\";\n  const dividerStyle = useMemo(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */jsx(StackItem, {\n        children: child\n      }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider) return _child;\n      const clonedDivider = cloneElement(divider, {\n        __css: dividerStyle\n      });\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [_child, _divider]\n      }, key);\n    });\n  }, [divider, dividerStyle, hasDivider, shouldUseChildren, shouldWrapChildren, children]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: direction,\n    flexWrap: wrap,\n    gap: hasDivider ? void 0 : spacing,\n    className: _className\n  }, rest), {}, {\n    children: clones\n  }));\n});\nStack.displayName = \"Stack\";\nexport { Stack };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsxs","jsx","getValidChildren","cx","useMemo","cloneElement","Fragment","StackItem","getDividerStyles","forwardRef","chakra","Stack","props","ref","isInline","direction","directionProp","align","justify","spacing","wrap","children","divider","className","shouldWrapChildren","rest","dividerStyle","hasDivider","shouldUseChildren","clones","validChildren","map","child","index","key","isLast","length","wrappedChild","_child","clonedDivider","__css","_divider","_className","div","display","alignItems","justifyContent","flexDirection","flexWrap","gap","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/stack/stack.mjs"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { useMemo, cloneElement, Fragment } from 'react';\nimport { StackItem } from './stack-item.mjs';\nimport { getDividerStyles } from './stack.utils.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp ?? \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport { Stack };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}