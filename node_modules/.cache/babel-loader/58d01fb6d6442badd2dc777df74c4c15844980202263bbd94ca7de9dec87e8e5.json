{"ast":null,"code":"import{useState}from'react';import{useNavigate,Link as RouterLink}from'react-router-dom';import{supabase}from'../../config/supabaseClient';import{Box,Button,FormControl,FormLabel,Input,VStack,Heading,Text,Link,useToast}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const toast=useToast();const handleLogin=async e=>{e.preventDefault();try{const{error}=await supabase.auth.signInWithPassword({email,password});if(error)throw error;toast({title:'Login successful',status:'success',duration:3000});}catch(error){toast({title:'Error',description:error.message,status:'error',duration:3000});}};return/*#__PURE__*/_jsx(Box,{maxW:\"400px\",mx:\"auto\",mt:8,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsx(Heading,{children:\"Ecocupon Login\"}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Email\"}),/*#__PURE__*/_jsx(Input,{type:\"email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"green\",onClick:handleLogin,width:\"100%\",children:\"Login\"})]})});};export default Login;","map":{"version":3,"names":["useState","useNavigate","Link","RouterLink","supabase","Box","Button","FormControl","FormLabel","Input","VStack","Heading","Text","useToast","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","toast","handleLogin","e","preventDefault","error","auth","signInWithPassword","title","status","duration","description","message","maxW","mx","mt","children","spacing","type","value","onChange","target","colorScheme","onClick","width"],"sources":["/Users/macbook/developer/2025/2026/src/components/Auth/Login.js"],"sourcesContent":["import { useState } from 'react'\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\nimport { supabase } from '../../config/supabaseClient'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  Heading,\n  Text,\n  Link,\n  useToast,\n} from '@chakra-ui/react'\n\nconst Login = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const toast = useToast()\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const { error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      })\n      if (error) throw error\n      toast({\n        title: 'Login successful',\n        status: 'success',\n        duration: 3000,\n      })\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 3000,\n      })\n    }\n  }\n\n  return (\n    <Box maxW=\"400px\" mx=\"auto\" mt={8}>\n      <VStack spacing={4}>\n        <Heading>Ecocupon Login</Heading>\n        <FormControl>\n          <FormLabel>Email</FormLabel>\n          <Input \n            type=\"email\" \n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Password</FormLabel>\n          <Input \n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormControl>\n        <Button colorScheme=\"green\" onClick={handleLogin} width=\"100%\">\n          Login\n        </Button>\n      </VStack>\n    </Box>\n  )\n}\n\nexport default Login"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,WAAW,CAAEC,IAAI,GAAI,CAAAC,UAAU,KAAQ,kBAAkB,CAClE,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,OACEC,GAAG,CACHC,MAAM,CACNC,WAAW,CACXC,SAAS,CACTC,KAAK,CACLC,MAAM,CACNC,OAAO,CACPC,IAAI,CACJV,IAAI,CACJW,QAAQ,KACH,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACqB,QAAQ,CAAEC,WAAW,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAuB,KAAK,CAAGV,QAAQ,CAAC,CAAC,CAExB,KAAM,CAAAW,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAvB,QAAQ,CAACwB,IAAI,CAACC,kBAAkB,CAAC,CACvDV,KAAK,CACLE,QACF,CAAC,CAAC,CACF,GAAIM,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtBJ,KAAK,CAAC,CACJO,KAAK,CAAE,kBAAkB,CACzBC,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAAE,MAAOL,KAAK,CAAE,CACdJ,KAAK,CAAC,CACJO,KAAK,CAAE,OAAO,CACdG,WAAW,CAAEN,KAAK,CAACO,OAAO,CAC1BH,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACF,CAAC,CAED,mBACEjB,IAAA,CAACV,GAAG,EAAC8B,IAAI,CAAC,OAAO,CAACC,EAAE,CAAC,MAAM,CAACC,EAAE,CAAE,CAAE,CAAAC,QAAA,cAChCrB,KAAA,CAACP,MAAM,EAAC6B,OAAO,CAAE,CAAE,CAAAD,QAAA,eACjBvB,IAAA,CAACJ,OAAO,EAAA2B,QAAA,CAAC,gBAAc,CAAS,CAAC,cACjCrB,KAAA,CAACV,WAAW,EAAA+B,QAAA,eACVvB,IAAA,CAACP,SAAS,EAAA8B,QAAA,CAAC,OAAK,CAAW,CAAC,cAC5BvB,IAAA,CAACN,KAAK,EACJ+B,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEtB,KAAM,CACbuB,QAAQ,CAAGjB,CAAC,EAAKL,QAAQ,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAC3C,CAAC,EACS,CAAC,cACdxB,KAAA,CAACV,WAAW,EAAA+B,QAAA,eACVvB,IAAA,CAACP,SAAS,EAAA8B,QAAA,CAAC,UAAQ,CAAW,CAAC,cAC/BvB,IAAA,CAACN,KAAK,EACJ+B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEpB,QAAS,CAChBqB,QAAQ,CAAGjB,CAAC,EAAKH,WAAW,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAC9C,CAAC,EACS,CAAC,cACd1B,IAAA,CAACT,MAAM,EAACsC,WAAW,CAAC,OAAO,CAACC,OAAO,CAAErB,WAAY,CAACsB,KAAK,CAAC,MAAM,CAAAR,QAAA,CAAC,OAE/D,CAAQ,CAAC,EACH,CAAC,CACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}