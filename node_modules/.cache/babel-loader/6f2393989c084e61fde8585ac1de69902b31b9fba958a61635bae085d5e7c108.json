{"ast":null,"code":"// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], {\n    type: mimeString\n  });\n}\n\n// src/download-file.ts\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction downloadFile(options) {\n  const {\n    file,\n    win,\n    type,\n    name\n  } = options;\n  const doc = win.document;\n  const obj = typeof file === \"string\" ? new Blob([file], {\n    type\n  }) : file;\n  const fileName = typeof file === \"string\" ? name : file instanceof File ? file.name : void 0;\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\");\n    return;\n  }\n  const url = win.URL.createObjectURL(obj);\n  const anchor = doc.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.href = url;\n  anchor.rel = \"noopener\";\n  anchor.download = fileName || \"file-download\";\n  doc.documentElement.appendChild(anchor);\n  anchor.click();\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n    anchor.remove();\n  }, 0);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = v => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (!accept) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async file => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const {\n        result\n      } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = files => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = v => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : accept.split(\",\");\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some(type => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\nexport { dataURItoBlob, downloadFile, getAcceptAttrString, getFileDataUrl, getTotalFileSize, isFileEqual, isMSEdge, isValidFileSize, isValidFileType };","map":{"version":3,"names":["dataURItoBlob","uri","binary","atob","split","mimeString","buffer","ArrayBuffer","length","intArray","Uint8Array","i","charCodeAt","Blob","type","isMSEdge","win","Boolean","navigator","msSaveOrOpenBlob","downloadFile","options","file","name","doc","document","obj","fileName","File","url","URL","createObjectURL","anchor","createElement","style","display","href","rel","download","documentElement","appendChild","click","setTimeout","revokeObjectURL","remove","isMIMEType","v","test","isExt","isValidMIME","getAcceptAttrString","accept","Array","isArray","filter","join","Object","entries","reduce","a","mimeType","ext","getFileDataUrl","reader","FileReader","Promise","resolve","reject","onerror","abort","Error","onloadend","result","readAsDataURL","getTotalFileSize","files","acc","size","isFileEqual","file1","file2","isDefined","isValidFileSize","minSize","maxSize","isFileAccepted","types","toLowerCase","baseMimeType","replace","some","validType","trim","charAt","endsWith","isValidFileType","isAcceptable"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/file-utils/dist/index.mjs"],"sourcesContent":["// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction downloadFile(options) {\n  const { file, win, type, name } = options;\n  const doc = win.document;\n  const obj = typeof file === \"string\" ? new Blob([file], { type }) : file;\n  const fileName = typeof file === \"string\" ? name : file instanceof File ? file.name : void 0;\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\");\n    return;\n  }\n  const url = win.URL.createObjectURL(obj);\n  const anchor = doc.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.href = url;\n  anchor.rel = \"noopener\";\n  anchor.download = fileName || \"file-download\";\n  doc.documentElement.appendChild(anchor);\n  anchor.click();\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n    anchor.remove();\n  }, 0);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (!accept) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : accept.split(\",\");\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\nexport { dataURItoBlob, downloadFile, getAcceptAttrString, getFileDataUrl, getTotalFileSize, isFileEqual, isMSEdge, isValidFileSize, isValidFileType };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}