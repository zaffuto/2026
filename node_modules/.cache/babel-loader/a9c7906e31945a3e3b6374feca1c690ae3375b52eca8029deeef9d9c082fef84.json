{"ast":null,"code":"'use client';\n\nimport { getWindow, dataAttr, ariaAttr } from '@zag-js/dom-query';\nimport { useRef, useId, useMemo } from 'react';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { useFieldsetContext } from '../fieldset/use-fieldset-context.js';\nimport { parts } from './field.anatomy.js';\nconst useField = props => {\n  const fieldset = useFieldsetContext();\n  const {\n    ids,\n    disabled = Boolean(fieldset?.disabled),\n    invalid = false,\n    readOnly = false,\n    required = false\n  } = props;\n  const hasErrorText = useRef(false);\n  const hasHelperText = useRef(false);\n  const id = props.id ?? useId();\n  const rootRef = useRef(null);\n  const rootId = ids?.control ?? `field::${id}`;\n  const errorTextId = ids?.errorText ?? `field::${id}::error-text`;\n  const helperTextId = ids?.helperText ?? `field::${id}::helper-text`;\n  const labelId = ids?.label ?? `field::${id}::label`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const win = getWindow(rootNode);\n    const doc = win.document;\n    const checkTextElements = () => {\n      hasErrorText.current = !!doc.getElementById(errorTextId);\n      hasHelperText.current = !!doc.getElementById(helperTextId);\n    };\n    checkTextElements();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect();\n  }, [errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids2 = [];\n    if (hasErrorText.current && invalid) ids2.push(errorTextId);\n    if (hasHelperText.current) ids2.push(helperTextId);\n    return ids2.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId]);\n  const getRootProps = useMemo(() => () => ({\n    ...parts.root.attrs,\n    id: rootId,\n    ref: rootRef,\n    role: \"group\",\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-readonly\": dataAttr(readOnly)\n  }), [disabled, invalid, readOnly, rootId]);\n  const getLabelProps = useMemo(() => () => ({\n    ...parts.label.attrs,\n    id: labelId,\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-readonly\": dataAttr(readOnly),\n    htmlFor: id\n  }), [disabled, invalid, readOnly, id, labelId]);\n  const getControlProps = useMemo(() => () => ({\n    \"aria-describedby\": labelIds,\n    \"aria-invalid\": ariaAttr(invalid),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-required\": dataAttr(required),\n    \"data-readonly\": dataAttr(readOnly),\n    id,\n    required,\n    disabled,\n    readOnly\n  }), [labelIds, invalid, required, readOnly, id, disabled]);\n  const getInputProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.input.attrs\n  }), [getControlProps]);\n  const getTextareaProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.textarea.attrs\n  }), [getControlProps]);\n  const getSelectProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.select.attrs\n  }), [getControlProps]);\n  const getHelperTextProps = useMemo(() => () => ({\n    id: helperTextId,\n    ...parts.helperText.attrs\n  }), [helperTextId]);\n  const getErrorTextProps = useMemo(() => () => ({\n    id: errorTextId,\n    ...parts.errorText.attrs,\n    \"aria-live\": \"polite\"\n  }), [errorTextId]);\n  const getRequiredIndicatorProps = useMemo(() => () => ({\n    \"aria-hidden\": true,\n    ...parts.requiredIndicator.attrs\n  }), []);\n  return {\n    ariaDescribedby: labelIds,\n    ids: {\n      root: rootId,\n      control: id,\n      label: labelId,\n      errorText: errorTextId,\n      helperText: helperTextId\n    },\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    readOnly,\n    required,\n    getLabelProps,\n    getRootProps,\n    getInputProps,\n    getTextareaProps,\n    getSelectProps,\n    getHelperTextProps,\n    getErrorTextProps,\n    getRequiredIndicatorProps\n  };\n};\nexport { useField };","map":{"version":3,"names":["getWindow","dataAttr","ariaAttr","useRef","useId","useMemo","useSafeLayoutEffect","useFieldsetContext","parts","useField","props","fieldset","ids","disabled","Boolean","invalid","readOnly","required","hasErrorText","hasHelperText","id","rootRef","rootId","control","errorTextId","errorText","helperTextId","helperText","labelId","label","rootNode","current","win","doc","document","checkTextElements","getElementById","observer","MutationObserver","observe","childList","subtree","disconnect","labelIds","ids2","push","join","getRootProps","root","attrs","ref","role","getLabelProps","htmlFor","getControlProps","getInputProps","input","getTextareaProps","textarea","getSelectProps","select","getHelperTextProps","getErrorTextProps","getRequiredIndicatorProps","requiredIndicator","ariaDescribedby","refs"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/field/use-field.js"],"sourcesContent":["'use client';\nimport { getWindow, dataAttr, ariaAttr } from '@zag-js/dom-query';\nimport { useRef, useId, useMemo } from 'react';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { useFieldsetContext } from '../fieldset/use-fieldset-context.js';\nimport { parts } from './field.anatomy.js';\n\nconst useField = (props) => {\n  const fieldset = useFieldsetContext();\n  const {\n    ids,\n    disabled = Boolean(fieldset?.disabled),\n    invalid = false,\n    readOnly = false,\n    required = false\n  } = props;\n  const hasErrorText = useRef(false);\n  const hasHelperText = useRef(false);\n  const id = props.id ?? useId();\n  const rootRef = useRef(null);\n  const rootId = ids?.control ?? `field::${id}`;\n  const errorTextId = ids?.errorText ?? `field::${id}::error-text`;\n  const helperTextId = ids?.helperText ?? `field::${id}::helper-text`;\n  const labelId = ids?.label ?? `field::${id}::label`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const win = getWindow(rootNode);\n    const doc = win.document;\n    const checkTextElements = () => {\n      hasErrorText.current = !!doc.getElementById(errorTextId);\n      hasHelperText.current = !!doc.getElementById(helperTextId);\n    };\n    checkTextElements();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, { childList: true, subtree: true });\n    return () => observer.disconnect();\n  }, [errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids2 = [];\n    if (hasErrorText.current && invalid) ids2.push(errorTextId);\n    if (hasHelperText.current) ids2.push(helperTextId);\n    return ids2.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId]);\n  const getRootProps = useMemo(\n    () => () => ({\n      ...parts.root.attrs,\n      id: rootId,\n      ref: rootRef,\n      role: \"group\",\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-readonly\": dataAttr(readOnly)\n    }),\n    [disabled, invalid, readOnly, rootId]\n  );\n  const getLabelProps = useMemo(\n    () => () => ({\n      ...parts.label.attrs,\n      id: labelId,\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-readonly\": dataAttr(readOnly),\n      htmlFor: id\n    }),\n    [disabled, invalid, readOnly, id, labelId]\n  );\n  const getControlProps = useMemo(\n    () => () => ({\n      \"aria-describedby\": labelIds,\n      \"aria-invalid\": ariaAttr(invalid),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-required\": dataAttr(required),\n      \"data-readonly\": dataAttr(readOnly),\n      id,\n      required,\n      disabled,\n      readOnly\n    }),\n    [labelIds, invalid, required, readOnly, id, disabled]\n  );\n  const getInputProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.input.attrs\n    }),\n    [getControlProps]\n  );\n  const getTextareaProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.textarea.attrs\n    }),\n    [getControlProps]\n  );\n  const getSelectProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.select.attrs\n    }),\n    [getControlProps]\n  );\n  const getHelperTextProps = useMemo(\n    () => () => ({\n      id: helperTextId,\n      ...parts.helperText.attrs\n    }),\n    [helperTextId]\n  );\n  const getErrorTextProps = useMemo(\n    () => () => ({\n      id: errorTextId,\n      ...parts.errorText.attrs,\n      \"aria-live\": \"polite\"\n    }),\n    [errorTextId]\n  );\n  const getRequiredIndicatorProps = useMemo(\n    () => () => ({\n      \"aria-hidden\": true,\n      ...parts.requiredIndicator.attrs\n    }),\n    []\n  );\n  return {\n    ariaDescribedby: labelIds,\n    ids: {\n      root: rootId,\n      control: id,\n      label: labelId,\n      errorText: errorTextId,\n      helperText: helperTextId\n    },\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    readOnly,\n    required,\n    getLabelProps,\n    getRootProps,\n    getInputProps,\n    getTextareaProps,\n    getSelectProps,\n    getHelperTextProps,\n    getErrorTextProps,\n    getRequiredIndicatorProps\n  };\n};\n\nexport { useField };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}