{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/macbook/developer/2025/2026/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"align\", \"decoration\", \"casing\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { compact, cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const _omitThemingProps = omitThemingProps(props),\n    {\n      className,\n      align,\n      decoration,\n      casing\n    } = _omitThemingProps,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */jsx(chakra.p, _objectSpread(_objectSpread(_objectSpread({\n    ref,\n    className: cx(\"chakra-text\", props.className)\n  }, aliasedProps), rest), {}, {\n    __css: styles\n  }));\n});\nText.displayName = \"Text\";\nexport { Text };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsx","omitThemingProps","compact","cx","forwardRef","useStyleConfig","chakra","Text","Text2","props","ref","styles","_omitThemingProps","className","align","decoration","casing","rest","aliasedProps","textAlign","textDecoration","textTransform","p","__css","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/typography/text.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { compact, cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport { Text };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,OAAO,EAAEC,EAAE,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,IAAI,GAAGH,UAAU,CAAC,SAASI,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACjD,MAAMC,MAAM,GAAGN,cAAc,CAAC,MAAM,EAAEI,KAAK,CAAC;EAC5C,MAAAG,iBAAA,GAA0DX,gBAAgB,CAACQ,KAAK,CAAC;IAA3E;MAAEI,SAAS;MAAEC,KAAK;MAAEC,UAAU;MAAEC;IAAgB,CAAC,GAAAJ,iBAAA;IAANK,IAAI,GAAAnB,wBAAA,CAAAc,iBAAA,EAAAb,SAAA;EACrD,MAAMmB,YAAY,GAAGhB,OAAO,CAAC;IAC3BiB,SAAS,EAAEV,KAAK,CAACK,KAAK;IACtBM,cAAc,EAAEX,KAAK,CAACM,UAAU;IAChCM,aAAa,EAAEZ,KAAK,CAACO;EACvB,CAAC,CAAC;EACF,OAAO,eAAgBhB,GAAG,CACxBM,MAAM,CAACgB,CAAC,EAAAzB,aAAA,CAAAA,aAAA,CAAAA,aAAA;IAENa,GAAG;IACHG,SAAS,EAAEV,EAAE,CAAC,aAAa,EAAEM,KAAK,CAACI,SAAS;EAAC,GAC1CK,YAAY,GACZD,IAAI;IACPM,KAAK,EAAEZ;EAAM,EAEjB,CAAC;AACH,CAAC,CAAC;AACFJ,IAAI,CAACiB,WAAW,GAAG,MAAM;AAEzB,SAASjB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}