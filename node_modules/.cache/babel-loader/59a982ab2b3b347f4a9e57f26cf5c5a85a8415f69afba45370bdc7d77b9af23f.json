{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { formatBytes } from '@zag-js/i18n-utils';\nimport { useMemo } from 'react';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nconst FormatByte = props => {\n  const {\n    value,\n    ...intlOptions\n  } = props;\n  const {\n    locale\n  } = useLocaleContext();\n  const text = useMemo(() => formatBytes(value, locale, intlOptions), [value, locale, intlOptions]);\n  return /* @__PURE__ */jsx(Fragment, {\n    children: text\n  });\n};\nFormatByte.displayName = \"FormatByte\";\nexport { FormatByte };","map":{"version":3,"names":["jsx","Fragment","formatBytes","useMemo","useLocaleContext","FormatByte","props","value","intlOptions","locale","text","children","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/format/format-byte.js"],"sourcesContent":["'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { formatBytes } from '@zag-js/i18n-utils';\nimport { useMemo } from 'react';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\n\nconst FormatByte = (props) => {\n  const { value, ...intlOptions } = props;\n  const { locale } = useLocaleContext();\n  const text = useMemo(() => formatBytes(value, locale, intlOptions), [value, locale, intlOptions]);\n  return /* @__PURE__ */ jsx(Fragment, { children: text });\n};\nFormatByte.displayName = \"FormatByte\";\n\nexport { FormatByte };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,QAAQ,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,gBAAgB,QAAQ,8CAA8C;AAE/E,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,KAAK;IAAE,GAAGC;EAAY,CAAC,GAAGF,KAAK;EACvC,MAAM;IAAEG;EAAO,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EACrC,MAAMM,IAAI,GAAGP,OAAO,CAAC,MAAMD,WAAW,CAACK,KAAK,EAAEE,MAAM,EAAED,WAAW,CAAC,EAAE,CAACD,KAAK,EAAEE,MAAM,EAAED,WAAW,CAAC,CAAC;EACjG,OAAO,eAAgBR,GAAG,CAACC,QAAQ,EAAE;IAAEU,QAAQ,EAAED;EAAK,CAAC,CAAC;AAC1D,CAAC;AACDL,UAAU,CAACO,WAAW,GAAG,YAAY;AAErC,SAASP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}