{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { splitPresenceProps } from '../presence/split-presence-props.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useColorPicker } from './use-color-picker.js';\nimport { ColorPickerProvider } from './use-color-picker-context.js';\nconst ColorPickerRoot = forwardRef((props, ref) => {\n  const [presenceProps, colorPickerProps] = splitPresenceProps(props);\n  const [useColorPickerProps, localProps] = createSplitProps()(colorPickerProps, [\"closeOnSelect\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"format\", \"id\", \"ids\", \"initialFocusEl\", \"invalid\", \"name\", \"name\", \"onFocusOutside\", \"onFormatChange\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"onValueChange\", \"onValueChangeEnd\", \"open\", \"openAutoFocus\", \"positioning\", \"readOnly\", \"required\", \"value\"]);\n  const colorPicker = useColorPicker(useColorPickerProps);\n  const presence = usePresence(mergeProps({\n    present: colorPicker.open\n  }, presenceProps));\n  const mergedProps = mergeProps(colorPicker.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(ColorPickerProvider, {\n    value: colorPicker,\n    children: /* @__PURE__ */jsx(PresenceProvider, {\n      value: presence,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nColorPickerRoot.displayName = \"ColorPickerRoot\";\nexport { ColorPickerRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","splitPresenceProps","usePresence","PresenceProvider","useColorPicker","ColorPickerProvider","ColorPickerRoot","props","ref","presenceProps","colorPickerProps","useColorPickerProps","localProps","colorPicker","presence","present","open","mergedProps","getRootProps","value","children","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/color-picker/color-picker-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { splitPresenceProps } from '../presence/split-presence-props.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useColorPicker } from './use-color-picker.js';\nimport { ColorPickerProvider } from './use-color-picker-context.js';\n\nconst ColorPickerRoot = forwardRef((props, ref) => {\n  const [presenceProps, colorPickerProps] = splitPresenceProps(props);\n  const [useColorPickerProps, localProps] = createSplitProps()(\n    colorPickerProps,\n    [\n      \"closeOnSelect\",\n      \"defaultOpen\",\n      \"defaultValue\",\n      \"disabled\",\n      \"format\",\n      \"id\",\n      \"ids\",\n      \"initialFocusEl\",\n      \"invalid\",\n      \"name\",\n      \"name\",\n      \"onFocusOutside\",\n      \"onFormatChange\",\n      \"onInteractOutside\",\n      \"onOpenChange\",\n      \"onPointerDownOutside\",\n      \"onValueChange\",\n      \"onValueChangeEnd\",\n      \"open\",\n      \"openAutoFocus\",\n      \"positioning\",\n      \"readOnly\",\n      \"required\",\n      \"value\"\n    ]\n  );\n  const colorPicker = useColorPicker(useColorPickerProps);\n  const presence = usePresence(mergeProps({ present: colorPicker.open }, presenceProps));\n  const mergedProps = mergeProps(colorPicker.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(ColorPickerProvider, { value: colorPicker, children: /* @__PURE__ */ jsx(PresenceProvider, { value: presence, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });\n});\nColorPickerRoot.displayName = \"ColorPickerRoot\";\n\nexport { ColorPickerRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,mBAAmB,QAAQ,+BAA+B;AAEnE,MAAMC,eAAe,GAAGR,UAAU,CAAC,CAACS,KAAK,EAAEC,GAAG,KAAK;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,kBAAkB,CAACM,KAAK,CAAC;EACnE,MAAM,CAACI,mBAAmB,EAAEC,UAAU,CAAC,GAAGb,gBAAgB,CAAC,CAAC,CAC1DW,gBAAgB,EAChB,CACE,eAAe,EACf,aAAa,EACb,cAAc,EACd,UAAU,EACV,QAAQ,EACR,IAAI,EACJ,KAAK,EACL,gBAAgB,EAChB,SAAS,EACT,MAAM,EACN,MAAM,EACN,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,cAAc,EACd,sBAAsB,EACtB,eAAe,EACf,kBAAkB,EAClB,MAAM,EACN,eAAe,EACf,aAAa,EACb,UAAU,EACV,UAAU,EACV,OAAO,CAEX,CAAC;EACD,MAAMG,WAAW,GAAGT,cAAc,CAACO,mBAAmB,CAAC;EACvD,MAAMG,QAAQ,GAAGZ,WAAW,CAACL,UAAU,CAAC;IAAEkB,OAAO,EAAEF,WAAW,CAACG;EAAK,CAAC,EAAEP,aAAa,CAAC,CAAC;EACtF,MAAMQ,WAAW,GAAGpB,UAAU,CAACgB,WAAW,CAACK,YAAY,CAAC,CAAC,EAAEN,UAAU,CAAC;EACtE,OAAO,eAAgBhB,GAAG,CAACS,mBAAmB,EAAE;IAAEc,KAAK,EAAEN,WAAW;IAAEO,QAAQ,EAAE,eAAgBxB,GAAG,CAACO,gBAAgB,EAAE;MAAEgB,KAAK,EAAEL,QAAQ;MAAEM,QAAQ,EAAE,eAAgBxB,GAAG,CAACI,GAAG,CAACqB,GAAG,EAAE;QAAE,GAAGJ,WAAW;QAAET;MAAI,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAChN,CAAC,CAAC;AACFF,eAAe,CAACgB,WAAW,GAAG,iBAAiB;AAE/C,SAAShB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}