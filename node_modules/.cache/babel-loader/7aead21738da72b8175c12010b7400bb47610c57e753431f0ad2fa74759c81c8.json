{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { useChakraContext } from '../styled-system/provider.js';\nimport { useMediaQuery } from './use-media-query.js';\nfunction useBreakpoint(options = {}) {\n  options.fallback || (options.fallback = \"base\");\n  const sys = useChakraContext();\n  let fallbackPassed = false;\n  const allBreakpoints = sys.breakpoints.values;\n  const breakpoints = allBreakpoints.map(({\n    min,\n    name: breakpoint\n  }) => {\n    const item = {\n      breakpoint,\n      query: `(min-width: ${min})`,\n      fallback: !fallbackPassed\n    };\n    if (breakpoint === options.fallback) {\n      fallbackPassed = true;\n    }\n    return item;\n  }).filter(({\n    breakpoint\n  }) => !!options.breakpoints?.includes(breakpoint));\n  const fallback = breakpoints.map(({\n    fallback: fallback2\n  }) => fallback2);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: options.ssr\n  });\n  const index = values.lastIndexOf(true);\n  return breakpoints[index]?.breakpoint ?? options.fallback;\n}\nfunction useBreakpointValue(value, opts) {\n  const sys = useChakraContext();\n  const normalized = sys.normalizeValue(value);\n  const breakpoint = useBreakpoint({\n    breakpoints: Object.keys(normalized),\n    ...opts\n  });\n  return normalized[breakpoint];\n}\nexport { useBreakpoint, useBreakpointValue };","map":{"version":3,"names":["useChakraContext","useMediaQuery","useBreakpoint","options","fallback","sys","fallbackPassed","allBreakpoints","breakpoints","values","map","min","name","breakpoint","item","query","filter","includes","fallback2","bp","ssr","index","lastIndexOf","useBreakpointValue","value","opts","normalized","normalizeValue","Object","keys"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/hooks/use-breakpoint.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { useChakraContext } from '../styled-system/provider.js';\nimport { useMediaQuery } from './use-media-query.js';\n\nfunction useBreakpoint(options = {}) {\n  options.fallback || (options.fallback = \"base\");\n  const sys = useChakraContext();\n  let fallbackPassed = false;\n  const allBreakpoints = sys.breakpoints.values;\n  const breakpoints = allBreakpoints.map(({ min, name: breakpoint }) => {\n    const item = {\n      breakpoint,\n      query: `(min-width: ${min})`,\n      fallback: !fallbackPassed\n    };\n    if (breakpoint === options.fallback) {\n      fallbackPassed = true;\n    }\n    return item;\n  }).filter(({ breakpoint }) => !!options.breakpoints?.includes(breakpoint));\n  const fallback = breakpoints.map(({ fallback: fallback2 }) => fallback2);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: options.ssr }\n  );\n  const index = values.lastIndexOf(true);\n  return breakpoints[index]?.breakpoint ?? options.fallback;\n}\nfunction useBreakpointValue(value, opts) {\n  const sys = useChakraContext();\n  const normalized = sys.normalizeValue(value);\n  const breakpoint = useBreakpoint({\n    breakpoints: Object.keys(normalized),\n    ...opts\n  });\n  return normalized[breakpoint];\n}\n\nexport { useBreakpoint, useBreakpointValue };\n"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AACZ,SAASA,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,aAAa,QAAQ,sBAAsB;AAEpD,SAASC,aAAaA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EACnCA,OAAO,CAACC,QAAQ,KAAKD,OAAO,CAACC,QAAQ,GAAG,MAAM,CAAC;EAC/C,MAAMC,GAAG,GAAGL,gBAAgB,CAAC,CAAC;EAC9B,IAAIM,cAAc,GAAG,KAAK;EAC1B,MAAMC,cAAc,GAAGF,GAAG,CAACG,WAAW,CAACC,MAAM;EAC7C,MAAMD,WAAW,GAAGD,cAAc,CAACG,GAAG,CAAC,CAAC;IAAEC,GAAG;IAAEC,IAAI,EAAEC;EAAW,CAAC,KAAK;IACpE,MAAMC,IAAI,GAAG;MACXD,UAAU;MACVE,KAAK,EAAE,eAAeJ,GAAG,GAAG;MAC5BP,QAAQ,EAAE,CAACE;IACb,CAAC;IACD,IAAIO,UAAU,KAAKV,OAAO,CAACC,QAAQ,EAAE;MACnCE,cAAc,GAAG,IAAI;IACvB;IACA,OAAOQ,IAAI;EACb,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;IAAEH;EAAW,CAAC,KAAK,CAAC,CAACV,OAAO,CAACK,WAAW,EAAES,QAAQ,CAACJ,UAAU,CAAC,CAAC;EAC1E,MAAMT,QAAQ,GAAGI,WAAW,CAACE,GAAG,CAAC,CAAC;IAAEN,QAAQ,EAAEc;EAAU,CAAC,KAAKA,SAAS,CAAC;EACxE,MAAMT,MAAM,GAAGR,aAAa,CAC1BO,WAAW,CAACE,GAAG,CAAES,EAAE,IAAKA,EAAE,CAACJ,KAAK,CAAC,EACjC;IAAEX,QAAQ;IAAEgB,GAAG,EAAEjB,OAAO,CAACiB;EAAI,CAC/B,CAAC;EACD,MAAMC,KAAK,GAAGZ,MAAM,CAACa,WAAW,CAAC,IAAI,CAAC;EACtC,OAAOd,WAAW,CAACa,KAAK,CAAC,EAAER,UAAU,IAAIV,OAAO,CAACC,QAAQ;AAC3D;AACA,SAASmB,kBAAkBA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACvC,MAAMpB,GAAG,GAAGL,gBAAgB,CAAC,CAAC;EAC9B,MAAM0B,UAAU,GAAGrB,GAAG,CAACsB,cAAc,CAACH,KAAK,CAAC;EAC5C,MAAMX,UAAU,GAAGX,aAAa,CAAC;IAC/BM,WAAW,EAAEoB,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC;IACpC,GAAGD;EACL,CAAC,CAAC;EACF,OAAOC,UAAU,CAACb,UAAU,CAAC;AAC/B;AAEA,SAASX,aAAa,EAAEqB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}