{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect, useCallback } from 'react';\nfunction useCallbackRef(callback) {\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useCallback(function () {\n    var _callbackRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n  }, deps);\n}\nexport { useCallbackRef };","map":{"version":3,"names":["useRef","useEffect","useCallback","useCallbackRef","callback","deps","arguments","length","undefined","callbackRef","current","_callbackRef$current","_len","args","Array","_key","call"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/hooks/dist/esm/use-callback-ref.mjs"],"sourcesContent":["'use client';\nimport { useRef, useEffect, useCallback } from 'react';\n\nfunction useCallbackRef(callback, deps = []) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useCallback((...args) => callbackRef.current?.(...args), deps);\n}\n\nexport { useCallbackRef };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEtD,SAASC,cAAcA,CAACC,QAAQ,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACzC,MAAMG,WAAW,GAAGT,MAAM,CAACI,QAAQ,CAAC;EACpCH,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACC,OAAO,GAAGN,QAAQ;EAChC,CAAC,CAAC;EACF,OAAOF,WAAW,CAAC;IAAA,IAAAS,oBAAA;IAAA,SAAAC,IAAA,GAAAN,SAAA,CAAAC,MAAA,EAAIM,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAT,SAAA,CAAAS,IAAA;IAAA;IAAA,QAAAJ,oBAAA,GAAKF,WAAW,CAACC,OAAO,cAAAC,oBAAA,uBAAnBA,oBAAA,CAAAK,IAAA,CAAAP,WAAW,EAAW,GAAGI,IAAI,CAAC;EAAA,GAAER,IAAI,CAAC;AACvE;AAEA,SAASF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}