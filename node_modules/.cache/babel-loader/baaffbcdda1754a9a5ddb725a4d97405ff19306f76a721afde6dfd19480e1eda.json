{"ast":null,"code":"'use client';\n\nimport * as collapsible from '@zag-js/collapsible';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useRef, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useCollapsible = (props = {}) => {\n  const {\n    lazyMount,\n    unmountOnExit,\n    ...collapsibleProps\n  } = props;\n  const wasVisible = useRef(false);\n  const {\n    dir\n  } = useLocaleContext();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    open: props.defaultOpen,\n    \"open.controlled\": props.open !== void 0,\n    ...collapsibleProps\n  };\n  const context = {\n    ...initialContext,\n    open: props.open,\n    onOpenChange: useEvent(props.onOpenChange, {\n      sync: true\n    })\n  };\n  const [state, send] = useMachine(collapsible.machine(initialContext), {\n    context\n  });\n  const api = collapsible.connect(state, send, normalizeProps);\n  if (api.visible) {\n    wasVisible.current = true;\n  }\n  const isUnmounted = !api.visible && !wasVisible.current && lazyMount || unmountOnExit && !api.visible && wasVisible.current;\n  return {\n    ...api,\n    isUnmounted\n  };\n};\nexport { useCollapsible };","map":{"version":3,"names":["collapsible","useMachine","normalizeProps","useRef","useId","useEnvironmentContext","useLocaleContext","useEvent","useCollapsible","props","lazyMount","unmountOnExit","collapsibleProps","wasVisible","dir","getRootNode","initialContext","id","open","defaultOpen","context","onOpenChange","sync","state","send","machine","api","connect","visible","current","isUnmounted"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/collapsible/use-collapsible.js"],"sourcesContent":["'use client';\nimport * as collapsible from '@zag-js/collapsible';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useRef, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useCollapsible = (props = {}) => {\n  const { lazyMount, unmountOnExit, ...collapsibleProps } = props;\n  const wasVisible = useRef(false);\n  const { dir } = useLocaleContext();\n  const { getRootNode } = useEnvironmentContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    open: props.defaultOpen,\n    \"open.controlled\": props.open !== void 0,\n    ...collapsibleProps\n  };\n  const context = {\n    ...initialContext,\n    open: props.open,\n    onOpenChange: useEvent(props.onOpenChange, { sync: true })\n  };\n  const [state, send] = useMachine(collapsible.machine(initialContext), { context });\n  const api = collapsible.connect(state, send, normalizeProps);\n  if (api.visible) {\n    wasVisible.current = true;\n  }\n  const isUnmounted = !api.visible && !wasVisible.current && lazyMount || unmountOnExit && !api.visible && wasVisible.current;\n  return { ...api, isUnmounted };\n};\n\nexport { useCollapsible };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,WAAW,MAAM,qBAAqB;AAClD,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,MAAM,EAAEC,KAAK,QAAQ,OAAO;AACrC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EACrC,MAAM;IAAEC,SAAS;IAAEC,aAAa;IAAE,GAAGC;EAAiB,CAAC,GAAGH,KAAK;EAC/D,MAAMI,UAAU,GAAGV,MAAM,CAAC,KAAK,CAAC;EAChC,MAAM;IAAEW;EAAI,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAClC,MAAM;IAAES;EAAY,CAAC,GAAGV,qBAAqB,CAAC,CAAC;EAC/C,MAAMW,cAAc,GAAG;IACrBC,EAAE,EAAEb,KAAK,CAAC,CAAC;IACXU,GAAG;IACHC,WAAW;IACXG,IAAI,EAAET,KAAK,CAACU,WAAW;IACvB,iBAAiB,EAAEV,KAAK,CAACS,IAAI,KAAK,KAAK,CAAC;IACxC,GAAGN;EACL,CAAC;EACD,MAAMQ,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBE,IAAI,EAAET,KAAK,CAACS,IAAI;IAChBG,YAAY,EAAEd,QAAQ,CAACE,KAAK,CAACY,YAAY,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;EAC3D,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGvB,UAAU,CAACD,WAAW,CAACyB,OAAO,CAACT,cAAc,CAAC,EAAE;IAAEI;EAAQ,CAAC,CAAC;EAClF,MAAMM,GAAG,GAAG1B,WAAW,CAAC2B,OAAO,CAACJ,KAAK,EAAEC,IAAI,EAAEtB,cAAc,CAAC;EAC5D,IAAIwB,GAAG,CAACE,OAAO,EAAE;IACff,UAAU,CAACgB,OAAO,GAAG,IAAI;EAC3B;EACA,MAAMC,WAAW,GAAG,CAACJ,GAAG,CAACE,OAAO,IAAI,CAACf,UAAU,CAACgB,OAAO,IAAInB,SAAS,IAAIC,aAAa,IAAI,CAACe,GAAG,CAACE,OAAO,IAAIf,UAAU,CAACgB,OAAO;EAC3H,OAAO;IAAE,GAAGH,GAAG;IAAEI;EAAY,CAAC;AAChC,CAAC;AAED,SAAStB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}