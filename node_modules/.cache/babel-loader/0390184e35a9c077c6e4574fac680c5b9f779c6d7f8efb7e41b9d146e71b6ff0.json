{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useColorPickerContext } from './use-color-picker-context.js';\nconst ColorPickerLabel = forwardRef((props, ref) => {\n  const colorPicker = useColorPickerContext();\n  const mergedProps = mergeProps(colorPicker.getLabelProps(), props);\n  return /* @__PURE__ */jsx(ark.label, {\n    ...mergedProps,\n    ref\n  });\n});\nColorPickerLabel.displayName = \"ColorPickerLabel\";\nexport { ColorPickerLabel };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useColorPickerContext","ColorPickerLabel","props","ref","colorPicker","mergedProps","getLabelProps","label","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/color-picker/color-picker-label.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useColorPickerContext } from './use-color-picker-context.js';\n\nconst ColorPickerLabel = forwardRef(\n  (props, ref) => {\n    const colorPicker = useColorPickerContext();\n    const mergedProps = mergeProps(colorPicker.getLabelProps(), props);\n    return /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ref });\n  }\n);\nColorPickerLabel.displayName = \"ColorPickerLabel\";\n\nexport { ColorPickerLabel };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,MAAMC,gBAAgB,GAAGH,UAAU,CACjC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACd,MAAMC,WAAW,GAAGJ,qBAAqB,CAAC,CAAC;EAC3C,MAAMK,WAAW,GAAGR,UAAU,CAACO,WAAW,CAACE,aAAa,CAAC,CAAC,EAAEJ,KAAK,CAAC;EAClE,OAAO,eAAgBN,GAAG,CAACG,GAAG,CAACQ,KAAK,EAAE;IAAE,GAAGF,WAAW;IAAEF;EAAI,CAAC,CAAC;AAChE,CACF,CAAC;AACDF,gBAAgB,CAACO,WAAW,GAAG,kBAAkB;AAEjD,SAASP,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}