{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { autoresizeTextarea } from '@zag-js/auto-resize';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { composeRefs } from '../../utils/compose-refs.js';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\nconst FieldTextarea = forwardRef((props, ref) => {\n  const {\n    autoresize,\n    ...textareaProps\n  } = props;\n  const textareaRef = useRef(null);\n  const field = useFieldContext();\n  const mergedProps = mergeProps(field?.getTextareaProps(), {\n    style: {\n      resize: autoresize ? \"none\" : void 0\n    }\n  }, textareaProps);\n  useEffect(() => {\n    if (!autoresize) return;\n    return autoresizeTextarea(textareaRef.current);\n  }, [autoresize]);\n  return /* @__PURE__ */jsx(ark.textarea, {\n    ...mergedProps,\n    ref: composeRefs(ref, textareaRef)\n  });\n});\nFieldTextarea.displayName = \"FieldTextarea\";\nexport { FieldTextarea };","map":{"version":3,"names":["jsx","autoresizeTextarea","mergeProps","forwardRef","useRef","useEffect","composeRefs","ark","useFieldContext","FieldTextarea","props","ref","autoresize","textareaProps","textareaRef","field","mergedProps","getTextareaProps","style","resize","current","textarea","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/field/field-textarea.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { autoresizeTextarea } from '@zag-js/auto-resize';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { composeRefs } from '../../utils/compose-refs.js';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\n\nconst FieldTextarea = forwardRef((props, ref) => {\n  const { autoresize, ...textareaProps } = props;\n  const textareaRef = useRef(null);\n  const field = useFieldContext();\n  const mergedProps = mergeProps(\n    field?.getTextareaProps(),\n    { style: { resize: autoresize ? \"none\" : void 0 } },\n    textareaProps\n  );\n  useEffect(() => {\n    if (!autoresize) return;\n    return autoresizeTextarea(textareaRef.current);\n  }, [autoresize]);\n  return /* @__PURE__ */ jsx(ark.textarea, { ...mergedProps, ref: composeRefs(ref, textareaRef) });\n});\nFieldTextarea.displayName = \"FieldTextarea\";\n\nexport { FieldTextarea };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACrD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,aAAa,GAAGN,UAAU,CAAC,CAACO,KAAK,EAAEC,GAAG,KAAK;EAC/C,MAAM;IAAEC,UAAU;IAAE,GAAGC;EAAc,CAAC,GAAGH,KAAK;EAC9C,MAAMI,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMW,KAAK,GAAGP,eAAe,CAAC,CAAC;EAC/B,MAAMQ,WAAW,GAAGd,UAAU,CAC5Ba,KAAK,EAAEE,gBAAgB,CAAC,CAAC,EACzB;IAAEC,KAAK,EAAE;MAAEC,MAAM,EAAEP,UAAU,GAAG,MAAM,GAAG,KAAK;IAAE;EAAE,CAAC,EACnDC,aACF,CAAC;EACDR,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,UAAU,EAAE;IACjB,OAAOX,kBAAkB,CAACa,WAAW,CAACM,OAAO,CAAC;EAChD,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAChB,OAAO,eAAgBZ,GAAG,CAACO,GAAG,CAACc,QAAQ,EAAE;IAAE,GAAGL,WAAW;IAAEL,GAAG,EAAEL,WAAW,CAACK,GAAG,EAAEG,WAAW;EAAE,CAAC,CAAC;AAClG,CAAC,CAAC;AACFL,aAAa,CAACa,WAAW,GAAG,eAAe;AAE3C,SAASb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}