{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldsetContext } from './use-fieldset-context.js';\nconst FieldsetErrorText = forwardRef((props, ref) => {\n  const fieldset = useFieldsetContext();\n  const mergedProps = mergeProps(fieldset.getErrorTextProps(), props);\n  return fieldset.invalid ? /* @__PURE__ */jsx(ark.span, {\n    ...mergedProps,\n    ref\n  }) : null;\n});\nFieldsetErrorText.displayName = \"FieldsetErrorText\";\nexport { FieldsetErrorText };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useFieldsetContext","FieldsetErrorText","props","ref","fieldset","mergedProps","getErrorTextProps","invalid","span","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/fieldset/fieldset-error-text.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldsetContext } from './use-fieldset-context.js';\n\nconst FieldsetErrorText = forwardRef(\n  (props, ref) => {\n    const fieldset = useFieldsetContext();\n    const mergedProps = mergeProps(fieldset.getErrorTextProps(), props);\n    return fieldset.invalid ? /* @__PURE__ */ jsx(ark.span, { ...mergedProps, ref }) : null;\n  }\n);\nFieldsetErrorText.displayName = \"FieldsetErrorText\";\n\nexport { FieldsetErrorText };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,MAAMC,iBAAiB,GAAGH,UAAU,CAClC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACd,MAAMC,QAAQ,GAAGJ,kBAAkB,CAAC,CAAC;EACrC,MAAMK,WAAW,GAAGR,UAAU,CAACO,QAAQ,CAACE,iBAAiB,CAAC,CAAC,EAAEJ,KAAK,CAAC;EACnE,OAAOE,QAAQ,CAACG,OAAO,GAAG,eAAgBX,GAAG,CAACG,GAAG,CAACS,IAAI,EAAE;IAAE,GAAGH,WAAW;IAAEF;EAAI,CAAC,CAAC,GAAG,IAAI;AACzF,CACF,CAAC;AACDF,iBAAiB,CAACQ,WAAW,GAAG,mBAAmB;AAEnD,SAASR,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}