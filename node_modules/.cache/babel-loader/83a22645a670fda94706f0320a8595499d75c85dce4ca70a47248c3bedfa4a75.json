{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useFileUpload } from './use-file-upload.js';\nimport { FileUploadProvider } from './use-file-upload-context.js';\nconst FileUploadRoot = forwardRef((props, ref) => {\n  const [useFileUploadProps, localProps] = createSplitProps()(props, [\"accept\", \"allowDrop\", \"capture\", \"directory\", \"disabled\", \"id\", \"ids\", \"invalid\", \"locale\", \"maxFiles\", \"maxFileSize\", \"minFileSize\", \"name\", \"onFileAccept\", \"onFileChange\", \"onFileReject\", \"preventDocumentDrop\", \"required\", \"translations\", \"validate\"]);\n  const fileUpload = useFileUpload(useFileUploadProps);\n  const mergedProps = mergeProps(fileUpload.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(FileUploadProvider, {\n    value: fileUpload,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nFileUploadRoot.displayName = \"FileUploadRoot\";\nexport { FileUploadRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","useFileUpload","FileUploadProvider","FileUploadRoot","props","ref","useFileUploadProps","localProps","fileUpload","mergedProps","getRootProps","value","children","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/file-upload/file-upload-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useFileUpload } from './use-file-upload.js';\nimport { FileUploadProvider } from './use-file-upload-context.js';\n\nconst FileUploadRoot = forwardRef((props, ref) => {\n  const [useFileUploadProps, localProps] = createSplitProps()(props, [\n    \"accept\",\n    \"allowDrop\",\n    \"capture\",\n    \"directory\",\n    \"disabled\",\n    \"id\",\n    \"ids\",\n    \"invalid\",\n    \"locale\",\n    \"maxFiles\",\n    \"maxFileSize\",\n    \"minFileSize\",\n    \"name\",\n    \"onFileAccept\",\n    \"onFileChange\",\n    \"onFileReject\",\n    \"preventDocumentDrop\",\n    \"required\",\n    \"translations\",\n    \"validate\"\n  ]);\n  const fileUpload = useFileUpload(useFileUploadProps);\n  const mergedProps = mergeProps(fileUpload.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(FileUploadProvider, { value: fileUpload, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) });\n});\nFileUploadRoot.displayName = \"FileUploadRoot\";\n\nexport { FileUploadRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,kBAAkB,QAAQ,8BAA8B;AAEjE,MAAMC,cAAc,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAChD,MAAM,CAACC,kBAAkB,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAACK,KAAK,EAAE,CACjE,QAAQ,EACR,WAAW,EACX,SAAS,EACT,WAAW,EACX,UAAU,EACV,IAAI,EACJ,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,aAAa,EACb,aAAa,EACb,MAAM,EACN,cAAc,EACd,cAAc,EACd,cAAc,EACd,qBAAqB,EACrB,UAAU,EACV,cAAc,EACd,UAAU,CACX,CAAC;EACF,MAAMI,UAAU,GAAGP,aAAa,CAACK,kBAAkB,CAAC;EACpD,MAAMG,WAAW,GAAGZ,UAAU,CAACW,UAAU,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACrE,OAAO,eAAgBX,GAAG,CAACM,kBAAkB,EAAE;IAAES,KAAK,EAAEH,UAAU;IAAEI,QAAQ,EAAE,eAAgBhB,GAAG,CAACI,GAAG,CAACa,GAAG,EAAE;MAAE,GAAGJ,WAAW;MAAEJ;IAAI,CAAC;EAAE,CAAC,CAAC;AACxI,CAAC,CAAC;AACFF,cAAc,CAACW,WAAW,GAAG,gBAAgB;AAE7C,SAASX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}