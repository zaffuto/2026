{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, observeAttributes, observeChildren } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/avatar.anatomy.ts\nvar anatomy = createAnatomy(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `avatar:${ctx.id}`,\n  getImageId: ctx => ctx.ids?.image ?? `avatar:${ctx.id}:image`,\n  getFallbackId: ctx => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getImageEl: ctx => dom.getById(ctx, dom.getImageId(ctx))\n});\n\n// src/avatar.connect.ts\nfunction connect(state, send, normalize) {\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      send({\n        type: \"SRC.SET\",\n        src\n      });\n    },\n    setLoaded() {\n      send({\n        type: \"IMG.LOADED\",\n        src: \"api\"\n      });\n    },\n    setError() {\n      send({\n        type: \"IMG.ERROR\",\n        src: \"api\"\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: state.context.dir,\n        id: dom.getImageId(state.context),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({\n            type: \"IMG.LOADED\",\n            src: \"element\"\n          });\n        },\n        onError() {\n          send({\n            type: \"IMG.ERROR\",\n            src: \"element\"\n          });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: state.context.dir,\n        id: dom.getFallbackId(state.context),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"avatar\",\n    initial: \"loading\",\n    activities: [\"trackImageRemoval\"],\n    context: ctx,\n    on: {\n      \"SRC.CHANGE\": {\n        target: \"loading\"\n      },\n      \"IMG.UNMOUNT\": {\n        target: \"error\"\n      }\n    },\n    states: {\n      loading: {\n        activities: [\"trackSrcChange\"],\n        entry: [\"checkImageStatus\"],\n        on: {\n          \"IMG.LOADED\": {\n            target: \"loaded\",\n            actions: [\"invokeOnLoad\"]\n          },\n          \"IMG.ERROR\": {\n            target: \"error\",\n            actions: [\"invokeOnError\"]\n          }\n        }\n      },\n      error: {\n        activities: [\"trackSrcChange\"],\n        on: {\n          \"IMG.LOADED\": {\n            target: \"loaded\",\n            actions: [\"invokeOnLoad\"]\n          }\n        }\n      },\n      loaded: {\n        activities: [\"trackSrcChange\"],\n        on: {\n          \"IMG.ERROR\": {\n            target: \"error\",\n            actions: [\"invokeOnError\"]\n          }\n        }\n      }\n    }\n  }, {\n    activities: {\n      trackSrcChange(ctx2, _evt, {\n        send\n      }) {\n        const imageEl = dom.getImageEl(ctx2);\n        return observeAttributes(imageEl, {\n          attributes: [\"src\", \"srcset\"],\n          callback() {\n            send({\n              type: \"SRC.CHANGE\"\n            });\n          }\n        });\n      },\n      trackImageRemoval(ctx2, _evt, {\n        send\n      }) {\n        const rootEl = dom.getRootEl(ctx2);\n        return observeChildren(rootEl, {\n          callback(records) {\n            const removedNodes = Array.from(records[0].removedNodes);\n            const removed = removedNodes.find(node => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\"));\n            if (removed) {\n              send({\n                type: \"IMG.UNMOUNT\"\n              });\n            }\n          }\n        });\n      }\n    },\n    actions: {\n      invokeOnLoad(ctx2) {\n        ctx2.onStatusChange?.({\n          status: \"loaded\"\n        });\n      },\n      invokeOnError(ctx2) {\n        ctx2.onStatusChange?.({\n          status: \"error\"\n        });\n      },\n      checkImageStatus(ctx2, _evt, {\n        send\n      }) {\n        const imageEl = dom.getImageEl(ctx2);\n        if (imageEl?.complete) {\n          const type = hasLoaded(imageEl) ? \"IMG.LOADED\" : \"IMG.ERROR\";\n          send({\n            type,\n            src: \"ssr\"\n          });\n        }\n      }\n    }\n  });\n}\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = createProps()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","observeAttributes","observeChildren","createMachine","createSplitProps","compact","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getImageId","image","getFallbackId","fallback","getRootEl","getById","getImageEl","connect","state","send","normalize","loaded","matches","setSrc","src","type","setLoaded","setError","getRootProps","element","attrs","dir","context","getImageProps","img","hidden","onLoad","onError","getFallbackProps","machine","userContext","initial","activities","on","target","states","loading","entry","actions","error","trackSrcChange","ctx2","_evt","imageEl","attributes","callback","trackImageRemoval","rootEl","records","removedNodes","Array","from","removed","find","node","nodeType","Node","ELEMENT_NODE","invokeOnLoad","onStatusChange","status","invokeOnError","checkImageStatus","complete","hasLoaded","naturalWidth","naturalHeight","props","splitProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/avatar/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, observeAttributes, observeChildren } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/avatar.anatomy.ts\nvar anatomy = createAnatomy(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`,\n  getImageId: (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`,\n  getFallbackId: (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getImageEl: (ctx) => dom.getById(ctx, dom.getImageId(ctx))\n});\n\n// src/avatar.connect.ts\nfunction connect(state, send, normalize) {\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      send({ type: \"SRC.SET\", src });\n    },\n    setLoaded() {\n      send({ type: \"IMG.LOADED\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"IMG.ERROR\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: state.context.dir,\n        id: dom.getImageId(state.context),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"IMG.LOADED\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"IMG.ERROR\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: state.context.dir,\n        id: dom.getFallbackId(state.context),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"avatar\",\n      initial: \"loading\",\n      activities: [\"trackImageRemoval\"],\n      context: ctx,\n      on: {\n        \"SRC.CHANGE\": {\n          target: \"loading\"\n        },\n        \"IMG.UNMOUNT\": {\n          target: \"error\"\n        }\n      },\n      states: {\n        loading: {\n          activities: [\"trackSrcChange\"],\n          entry: [\"checkImageStatus\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            },\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        },\n        error: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            }\n          }\n        },\n        loaded: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackSrcChange(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          return observeAttributes(imageEl, {\n            attributes: [\"src\", \"srcset\"],\n            callback() {\n              send({ type: \"SRC.CHANGE\" });\n            }\n          });\n        },\n        trackImageRemoval(ctx2, _evt, { send }) {\n          const rootEl = dom.getRootEl(ctx2);\n          return observeChildren(rootEl, {\n            callback(records) {\n              const removedNodes = Array.from(records[0].removedNodes);\n              const removed = removedNodes.find(\n                (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n              );\n              if (removed) {\n                send({ type: \"IMG.UNMOUNT\" });\n              }\n            }\n          });\n        }\n      },\n      actions: {\n        invokeOnLoad(ctx2) {\n          ctx2.onStatusChange?.({ status: \"loaded\" });\n        },\n        invokeOnError(ctx2) {\n          ctx2.onStatusChange?.({ status: \"error\" });\n        },\n        checkImageStatus(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          if (imageEl?.complete) {\n            const type = hasLoaded(imageEl) ? \"IMG.LOADED\" : \"IMG.ERROR\";\n            send({ type, src: \"ssr\" });\n          }\n        }\n      }\n    }\n  );\n}\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = createProps()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}