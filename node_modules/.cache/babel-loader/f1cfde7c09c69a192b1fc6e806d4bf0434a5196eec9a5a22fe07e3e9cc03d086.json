{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useNumberInput } from './use-number-input.js';\nimport { NumberInputProvider } from './use-number-input-context.js';\nconst NumberInputRoot = forwardRef((props, ref) => {\n  const [useNumberInputProps, localProps] = createSplitProps()(props, [\"allowMouseWheel\", \"allowOverflow\", \"clampValueOnBlur\", \"defaultValue\", \"disabled\", \"focusInputOnChange\", \"form\", \"formatOptions\", \"id\", \"ids\", \"inputMode\", \"invalid\", \"locale\", \"max\", \"min\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueInvalid\", \"pattern\", \"readOnly\", \"required\", \"spinOnPress\", \"step\", \"translations\", \"value\"]);\n  const numberInput = useNumberInput(useNumberInputProps);\n  const mergedProps = mergeProps(numberInput.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(NumberInputProvider, {\n    value: numberInput,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nNumberInputRoot.displayName = \"NumberInputRoot\";\nexport { NumberInputRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","useNumberInput","NumberInputProvider","NumberInputRoot","props","ref","useNumberInputProps","localProps","numberInput","mergedProps","getRootProps","value","children","div","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/number-input/number-input-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useNumberInput } from './use-number-input.js';\nimport { NumberInputProvider } from './use-number-input-context.js';\n\nconst NumberInputRoot = forwardRef((props, ref) => {\n  const [useNumberInputProps, localProps] = createSplitProps()(props, [\n    \"allowMouseWheel\",\n    \"allowOverflow\",\n    \"clampValueOnBlur\",\n    \"defaultValue\",\n    \"disabled\",\n    \"focusInputOnChange\",\n    \"form\",\n    \"formatOptions\",\n    \"id\",\n    \"ids\",\n    \"inputMode\",\n    \"invalid\",\n    \"locale\",\n    \"max\",\n    \"min\",\n    \"name\",\n    \"onFocusChange\",\n    \"onValueChange\",\n    \"onValueInvalid\",\n    \"pattern\",\n    \"readOnly\",\n    \"required\",\n    \"spinOnPress\",\n    \"step\",\n    \"translations\",\n    \"value\"\n  ]);\n  const numberInput = useNumberInput(useNumberInputProps);\n  const mergedProps = mergeProps(numberInput.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(NumberInputProvider, { value: numberInput, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) });\n});\nNumberInputRoot.displayName = \"NumberInputRoot\";\n\nexport { NumberInputRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,mBAAmB,QAAQ,+BAA+B;AAEnE,MAAMC,eAAe,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EACjD,MAAM,CAACC,mBAAmB,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAACK,KAAK,EAAE,CAClE,iBAAiB,EACjB,eAAe,EACf,kBAAkB,EAClB,cAAc,EACd,UAAU,EACV,oBAAoB,EACpB,MAAM,EACN,eAAe,EACf,IAAI,EACJ,KAAK,EACL,WAAW,EACX,SAAS,EACT,QAAQ,EACR,KAAK,EACL,KAAK,EACL,MAAM,EACN,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,SAAS,EACT,UAAU,EACV,UAAU,EACV,aAAa,EACb,MAAM,EACN,cAAc,EACd,OAAO,CACR,CAAC;EACF,MAAMI,WAAW,GAAGP,cAAc,CAACK,mBAAmB,CAAC;EACvD,MAAMG,WAAW,GAAGZ,UAAU,CAACW,WAAW,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACtE,OAAO,eAAgBX,GAAG,CAACM,mBAAmB,EAAE;IAAES,KAAK,EAAEH,WAAW;IAAEI,QAAQ,EAAE,eAAgBhB,GAAG,CAACI,GAAG,CAACa,GAAG,EAAE;MAAE,GAAGJ,WAAW;MAAEJ;IAAI,CAAC;EAAE,CAAC,CAAC;AAC1I,CAAC,CAAC;AACFF,eAAe,CAACW,WAAW,GAAG,iBAAiB;AAE/C,SAASX,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}