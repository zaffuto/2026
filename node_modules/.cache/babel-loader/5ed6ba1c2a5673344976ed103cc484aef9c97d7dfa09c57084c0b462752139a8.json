{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Checkbox, useCheckboxContext } from '@ark-ui/react/checkbox';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { Checkmark } from '../checkmark/checkmark.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useCheckboxStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"checkbox\"\n});\nconst CheckboxRootProvider = withProvider(Checkbox.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst CheckboxRoot = withProvider(Checkbox.Root, \"root\", {\n  forwardAsChild: true\n});\nconst CheckboxPropsProvider = PropsProvider;\nconst CheckboxLabel = withContext(Checkbox.Label, \"label\", {\n  forwardAsChild: true\n});\nconst CheckboxControl = withContext(Checkbox.Control, \"control\", {\n  forwardAsChild: true\n});\nconst CheckboxIndicator = forwardRef(function CheckboxIndicator2(props, ref) {\n  const {\n    checked,\n    indeterminate,\n    ...rest\n  } = props;\n  const api = useCheckboxContext();\n  const styles = useCheckboxStyles();\n  if (checked && api.checked) {\n    return /* @__PURE__ */jsx(chakra.svg, {\n      ref,\n      asChild: true,\n      ...rest,\n      css: [styles.indicator, props.css],\n      children: checked\n    });\n  }\n  if (indeterminate && api.indeterminate) {\n    return /* @__PURE__ */jsx(chakra.svg, {\n      ref,\n      asChild: true,\n      ...rest,\n      css: [styles.indicator, props.css],\n      children: indeterminate\n    });\n  }\n  return /* @__PURE__ */jsx(Checkmark, {\n    ref,\n    checked: api.checked,\n    indeterminate: api.indeterminate,\n    disabled: api.disabled,\n    unstyled: true,\n    ...rest,\n    css: [styles.indicator, props.css]\n  });\n});\nconst CheckboxGroup = chakra(Checkbox.Group, {\n  base: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1.5\"\n  }\n}, {\n  forwardAsChild: true\n});\nconst CheckboxContext = Checkbox.Context;\nconst CheckboxHiddenInput = Checkbox.HiddenInput;\nexport { CheckboxContext, CheckboxControl, CheckboxGroup, CheckboxHiddenInput, CheckboxIndicator, CheckboxLabel, CheckboxPropsProvider, CheckboxRoot, CheckboxRootProvider, useCheckboxStyles };","map":{"version":3,"names":["jsx","Checkbox","useCheckboxContext","forwardRef","createSlotRecipeContext","chakra","Checkmark","withProvider","withContext","useStyles","useCheckboxStyles","PropsProvider","key","CheckboxRootProvider","RootProvider","forwardAsChild","CheckboxRoot","Root","CheckboxPropsProvider","CheckboxLabel","Label","CheckboxControl","Control","CheckboxIndicator","CheckboxIndicator2","props","ref","checked","indeterminate","rest","api","styles","svg","asChild","css","indicator","children","disabled","unstyled","CheckboxGroup","Group","base","display","flexDirection","gap","CheckboxContext","Context","CheckboxHiddenInput","HiddenInput"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@chakra-ui/react/dist/esm/components/checkbox/checkbox.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { Checkbox, useCheckboxContext } from '@ark-ui/react/checkbox';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { Checkmark } from '../checkmark/checkmark.js';\n\nconst {\n  withProvider,\n  withContext,\n  useStyles: useCheckboxStyles,\n  PropsProvider\n} = createSlotRecipeContext({ key: \"checkbox\" });\nconst CheckboxRootProvider = withProvider(Checkbox.RootProvider, \"root\", { forwardAsChild: true });\nconst CheckboxRoot = withProvider(\n  Checkbox.Root,\n  \"root\",\n  { forwardAsChild: true }\n);\nconst CheckboxPropsProvider = PropsProvider;\nconst CheckboxLabel = withContext(\n  Checkbox.Label,\n  \"label\",\n  { forwardAsChild: true }\n);\nconst CheckboxControl = withContext(\n  Checkbox.Control,\n  \"control\",\n  { forwardAsChild: true }\n);\nconst CheckboxIndicator = forwardRef(function CheckboxIndicator2(props, ref) {\n  const { checked, indeterminate, ...rest } = props;\n  const api = useCheckboxContext();\n  const styles = useCheckboxStyles();\n  if (checked && api.checked) {\n    return /* @__PURE__ */ jsx(\n      chakra.svg,\n      {\n        ref,\n        asChild: true,\n        ...rest,\n        css: [styles.indicator, props.css],\n        children: checked\n      }\n    );\n  }\n  if (indeterminate && api.indeterminate) {\n    return /* @__PURE__ */ jsx(\n      chakra.svg,\n      {\n        ref,\n        asChild: true,\n        ...rest,\n        css: [styles.indicator, props.css],\n        children: indeterminate\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    Checkmark,\n    {\n      ref,\n      checked: api.checked,\n      indeterminate: api.indeterminate,\n      disabled: api.disabled,\n      unstyled: true,\n      ...rest,\n      css: [styles.indicator, props.css]\n    }\n  );\n});\nconst CheckboxGroup = chakra(\n  Checkbox.Group,\n  {\n    base: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"1.5\"\n    }\n  },\n  { forwardAsChild: true }\n);\nconst CheckboxContext = Checkbox.Context;\nconst CheckboxHiddenInput = Checkbox.HiddenInput;\n\nexport { CheckboxContext, CheckboxControl, CheckboxGroup, CheckboxHiddenInput, CheckboxIndicator, CheckboxLabel, CheckboxPropsProvider, CheckboxRoot, CheckboxRootProvider, useCheckboxStyles };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}