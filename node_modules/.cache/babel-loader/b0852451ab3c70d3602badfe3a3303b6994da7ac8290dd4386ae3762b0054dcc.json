{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\nconst FieldErrorText = forwardRef((props, ref) => {\n  const field = useFieldContext();\n  const mergedProps = mergeProps(field.getErrorTextProps(), props);\n  if (field?.invalid) {\n    return /* @__PURE__ */jsx(ark.span, {\n      ...mergedProps,\n      ref\n    });\n  }\n  return null;\n});\nFieldErrorText.displayName = \"FieldErrorText\";\nexport { FieldErrorText };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useFieldContext","FieldErrorText","props","ref","field","mergedProps","getErrorTextProps","invalid","span","displayName"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@ark-ui/react/dist/components/field/field-error-text.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\n\nconst FieldErrorText = forwardRef((props, ref) => {\n  const field = useFieldContext();\n  const mergedProps = mergeProps(field.getErrorTextProps(), props);\n  if (field?.invalid) {\n    return /* @__PURE__ */ jsx(ark.span, { ...mergedProps, ref });\n  }\n  return null;\n});\nFieldErrorText.displayName = \"FieldErrorText\";\n\nexport { FieldErrorText };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,cAAc,GAAGH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EAChD,MAAMC,KAAK,GAAGJ,eAAe,CAAC,CAAC;EAC/B,MAAMK,WAAW,GAAGR,UAAU,CAACO,KAAK,CAACE,iBAAiB,CAAC,CAAC,EAAEJ,KAAK,CAAC;EAChE,IAAIE,KAAK,EAAEG,OAAO,EAAE;IAClB,OAAO,eAAgBX,GAAG,CAACG,GAAG,CAACS,IAAI,EAAE;MAAE,GAAGH,WAAW;MAAEF;IAAI,CAAC,CAAC;EAC/D;EACA,OAAO,IAAI;AACb,CAAC,CAAC;AACFF,cAAc,CAACQ,WAAW,GAAG,gBAAgB;AAE7C,SAASR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}