{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, dataAttr, visuallyHiddenStyle, trackFormControl, nextTick, dispatchInputCheckedEvent } from '@zag-js/dom-query';\nimport { isFocusVisible, trackFocusVisible } from '@zag-js/focus-visible';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackElementRect } from '@zag-js/element-rect';\nimport { createSplitProps, compact, isString, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/radio-group.anatomy.ts\nvar anatomy = createAnatomy(\"radio-group\").parts(\"root\", \"label\", \"item\", \"itemText\", \"itemControl\", \"indicator\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `radio-group:${ctx.id}`,\n  getLabelId: ctx => ctx.ids?.label ?? `radio-group:${ctx.id}:label`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`,\n  getItemHiddenInputId: (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`,\n  getItemControlId: (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`,\n  getItemLabelId: (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`,\n  getIndicatorId: ctx => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemHiddenInputEl: (ctx, value) => dom.getById(ctx, dom.getItemHiddenInputId(ctx, value)),\n  getIndicatorEl: ctx => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getFirstEnabledInputEl: ctx => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled)\"),\n  getFirstEnabledAndCheckedInputEl: ctx => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\"),\n  getInputEls: ctx => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n    return queryAll(dom.getRootEl(ctx), selector);\n  },\n  getActiveRadioEl: ctx => {\n    if (!ctx.value) return;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.value));\n  },\n  getOffsetRect: el => ({\n    left: el?.offsetLeft ?? 0,\n    top: el?.offsetTop ?? 0,\n    width: el?.offsetWidth ?? 0,\n    height: el?.offsetHeight ?? 0\n  }),\n  getRectById: (ctx, id) => {\n    const radioEl = dom.getById(ctx, dom.getItemId(ctx, id));\n    if (!radioEl) return;\n    return dom.resolveRect(dom.getOffsetRect(radioEl));\n  },\n  resolveRect: rect => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/radio-group.connect.ts\nfunction connect(state, send, normalize) {\n  const groupDisabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  function getItemState(props2) {\n    return {\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      hovered: state.context.hoveredValue === props2.value,\n      active: state.context.activeValue === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const radioState = getItemState(props2);\n    return {\n      \"data-focus\": dataAttr(radioState.focused),\n      \"data-focus-visible\": dataAttr(radioState.focused && state.context.focusVisible),\n      \"data-disabled\": dataAttr(radioState.disabled),\n      \"data-readonly\": dataAttr(readOnly),\n      \"data-state\": radioState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": dataAttr(radioState.hovered),\n      \"data-invalid\": dataAttr(radioState.invalid),\n      \"data-orientation\": state.context.orientation,\n      \"data-ssr\": dataAttr(state.context.ssr)\n    };\n  }\n  const focus = () => {\n    const firstEnabledAndCheckedInput = dom.getFirstEnabledAndCheckedInputEl(state.context);\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    const firstEnabledInput = dom.getFirstEnabledInputEl(state.context);\n    firstEnabledInput?.focus();\n  };\n  return {\n    focus,\n    value: state.context.value,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value,\n        isTrusted: false\n      });\n    },\n    clearValue() {\n      send({\n        type: \"SET_VALUE\",\n        value: null,\n        isTrusted: false\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: dom.getRootId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(groupDisabled),\n        \"aria-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(groupDisabled),\n        id: dom.getLabelId(state.context),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        htmlFor: dom.getItemHiddenInputId(state.context, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({\n            type: \"SET_HOVERED\",\n            value: props2.value,\n            hovered: true\n          });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({\n            type: \"SET_HOVERED\",\n            value: null\n          });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({\n            type: \"SET_ACTIVE\",\n            value: props2.value,\n            active: true\n          });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({\n            type: \"SET_ACTIVE\",\n            value: null\n          });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemLabelId(state.context, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const controlState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: state.context.dir,\n        id: dom.getItemControlId(state.context, props2.value),\n        \"data-active\": dataAttr(controlState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const inputState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": dom.getRootId(state.context),\n        id: dom.getItemHiddenInputId(state.context, props2.value),\n        type: \"radio\",\n        name: state.context.name || state.context.id,\n        form: state.context.form,\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({\n              type: \"SET_VALUE\",\n              value: props2.value,\n              isTrusted: true\n            });\n          }\n        },\n        onBlur() {\n          send({\n            type: \"SET_FOCUSED\",\n            value: null,\n            focused: false,\n            focusVisible: false\n          });\n        },\n        onFocus() {\n          const focusVisible = isFocusVisible();\n          send({\n            type: \"SET_FOCUSED\",\n            value: props2.value,\n            focused: true,\n            focusVisible\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({\n              type: \"SET_ACTIVE\",\n              value: props2.value,\n              active: true\n            });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({\n              type: \"SET_ACTIVE\",\n              value: null\n            });\n          }\n        },\n        disabled: inputState.disabled,\n        defaultChecked: inputState.checked,\n        style: visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        hidden: state.context.value == null,\n        \"data-disabled\": dataAttr(groupDisabled),\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": state.context.indicatorRect?.left,\n          \"--top\": state.context.indicatorRect?.top,\n          \"--width\": state.context.indicatorRect?.width,\n          \"--height\": state.context.indicatorRect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: state.context.canIndicatorTransition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [state.context.orientation === \"horizontal\" ? \"left\" : \"top\"]: state.context.orientation === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar {\n  not\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"radio\",\n    initial: \"idle\",\n    context: {\n      value: null,\n      activeValue: null,\n      focusedValue: null,\n      hoveredValue: null,\n      disabled: false,\n      orientation: \"vertical\",\n      ...ctx,\n      indicatorRect: {},\n      canIndicatorTransition: false,\n      fieldsetDisabled: false,\n      focusVisible: false,\n      ssr: true\n    },\n    computed: {\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled\n    },\n    entry: [\"syncIndicatorRect\", \"syncSsr\"],\n    exit: [\"cleanupObserver\"],\n    activities: [\"trackFormControlState\", \"trackFocusVisible\"],\n    watch: {\n      value: [\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]\n    },\n    on: {\n      SET_VALUE: [{\n        guard: not(\"isTrusted\"),\n        actions: [\"setValue\", \"dispatchChangeEvent\"]\n      }, {\n        actions: [\"setValue\"]\n      }],\n      SET_HOVERED: {\n        actions: \"setHovered\"\n      },\n      SET_ACTIVE: {\n        actions: \"setActive\"\n      },\n      SET_FOCUSED: {\n        actions: \"setFocused\"\n      }\n    },\n    states: {\n      idle: {}\n    }\n  }, {\n    guards: {\n      isTrusted: (_ctx, evt) => !!evt.isTrusted\n    },\n    activities: {\n      trackFormControlState(ctx2, _evt, {\n        send,\n        initialContext\n      }) {\n        return trackFormControl(dom.getRootEl(ctx2), {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            send({\n              type: \"SET_VALUE\",\n              value: initialContext.value\n            });\n          }\n        });\n      },\n      trackFocusVisible(ctx2) {\n        return trackFocusVisible({\n          root: dom.getRootNode(ctx2)\n        });\n      }\n    },\n    actions: {\n      setValue(ctx2, evt) {\n        set.value(ctx2, evt.value);\n      },\n      setHovered(ctx2, evt) {\n        ctx2.hoveredValue = evt.value;\n      },\n      setActive(ctx2, evt) {\n        ctx2.activeValue = evt.value;\n      },\n      setFocused(ctx2, evt) {\n        ctx2.focusedValue = evt.value;\n        ctx2.focusVisible = evt.focusVisible;\n      },\n      syncInputElements(ctx2) {\n        const inputs = dom.getInputEls(ctx2);\n        inputs.forEach(input => {\n          input.checked = input.value === ctx2.value;\n        });\n      },\n      setIndicatorTransition(ctx2) {\n        ctx2.canIndicatorTransition = isString(ctx2.value);\n      },\n      cleanupObserver(ctx2) {\n        ctx2.indicatorCleanup?.();\n      },\n      syncSsr(ctx2) {\n        ctx2.ssr = false;\n      },\n      syncIndicatorRect(ctx2) {\n        ctx2.indicatorCleanup?.();\n        if (!dom.getIndicatorEl(ctx2)) return;\n        const value = ctx2.value;\n        const radioEl = dom.getActiveRadioEl(ctx2);\n        if (value == null || !radioEl) {\n          ctx2.indicatorRect = {};\n          return;\n        }\n        ctx2.indicatorCleanup = trackElementRect(radioEl, {\n          getRect(el) {\n            return dom.getOffsetRect(el);\n          },\n          onChange(rect) {\n            ctx2.indicatorRect = dom.resolveRect(rect);\n            nextTick(() => {\n              ctx2.canIndicatorTransition = false;\n            });\n          }\n        });\n      },\n      dispatchChangeEvent(ctx2) {\n        const inputEls = dom.getInputEls(ctx2);\n        inputEls.forEach(inputEl => {\n          const checked = inputEl.value === ctx2.value;\n          if (checked === inputEl.checked) return;\n          dispatchInputCheckedEvent(inputEl, {\n            checked\n          });\n        });\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({\n      value: ctx.value\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = createProps()([\"dir\", \"disabled\", \"form\", \"getRootNode\", \"id\", \"ids\", \"name\", \"onValueChange\", \"orientation\", \"readOnly\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = createSplitProps(itemProps);\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","queryAll","dataAttr","visuallyHiddenStyle","trackFormControl","nextTick","dispatchInputCheckedEvent","isFocusVisible","trackFocusVisible","createMachine","guards","trackElementRect","createSplitProps","compact","isString","isEqual","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getLabelId","label","getItemId","value","item","getItemHiddenInputId","itemHiddenInput","getItemControlId","itemControl","getItemLabelId","itemLabel","getIndicatorId","indicator","getRootEl","getById","getItemHiddenInputEl","getIndicatorEl","getFirstEnabledInputEl","querySelector","getFirstEnabledAndCheckedInputEl","getInputEls","ownerId","CSS","escape","selector","getActiveRadioEl","getOffsetRect","el","left","offsetLeft","top","offsetTop","width","offsetWidth","height","offsetHeight","getRectById","radioEl","resolveRect","rect","connect","state","send","normalize","groupDisabled","context","isDisabled","readOnly","getItemState","props2","invalid","disabled","checked","focused","focusedValue","hovered","hoveredValue","active","activeValue","getItemDataAttrs","radioState","focusVisible","orientation","ssr","focus","firstEnabledAndCheckedInput","firstEnabledInput","setValue","type","isTrusted","clearValue","getRootProps","element","attrs","role","dir","style","position","getLabelProps","onClick","getItemProps","itemState","htmlFor","onPointerMove","onPointerLeave","onPointerDown","event","pointerType","preventDefault","onPointerUp","getItemTextProps","itemText","getItemControlProps","controlState","getItemHiddenInputProps","inputState","input","name","form","currentTarget","onBlur","onFocus","onKeyDown","defaultPrevented","key","onKeyUp","defaultChecked","getIndicatorProps","hidden","indicatorRect","willChange","transitionProperty","transitionDuration","canIndicatorTransition","transitionTimingFunction","not","machine","userContext","initial","fieldsetDisabled","computed","ctx2","entry","exit","activities","watch","on","SET_VALUE","guard","actions","SET_HOVERED","SET_ACTIVE","SET_FOCUSED","states","idle","_ctx","evt","trackFormControlState","_evt","initialContext","onFieldsetDisabledChange","onFormReset","getRootNode","set","setHovered","setActive","setFocused","syncInputElements","inputs","forEach","setIndicatorTransition","cleanupObserver","indicatorCleanup","syncSsr","syncIndicatorRect","getRect","onChange","dispatchChangeEvent","inputEls","inputEl","invoke","change","onValueChange","props","splitProps","itemProps","splitItemProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/radio-group/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, dataAttr, visuallyHiddenStyle, trackFormControl, nextTick, dispatchInputCheckedEvent } from '@zag-js/dom-query';\nimport { isFocusVisible, trackFocusVisible } from '@zag-js/focus-visible';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackElementRect } from '@zag-js/element-rect';\nimport { createSplitProps, compact, isString, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/radio-group.anatomy.ts\nvar anatomy = createAnatomy(\"radio-group\").parts(\n  \"root\",\n  \"label\",\n  \"item\",\n  \"itemText\",\n  \"itemControl\",\n  \"indicator\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `radio-group:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `radio-group:${ctx.id}:label`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`,\n  getItemHiddenInputId: (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`,\n  getItemControlId: (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`,\n  getItemLabelId: (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`,\n  getIndicatorId: (ctx) => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemHiddenInputEl: (ctx, value) => dom.getById(ctx, dom.getItemHiddenInputId(ctx, value)),\n  getIndicatorEl: (ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getFirstEnabledInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled)\"),\n  getFirstEnabledAndCheckedInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\"),\n  getInputEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n    return queryAll(dom.getRootEl(ctx), selector);\n  },\n  getActiveRadioEl: (ctx) => {\n    if (!ctx.value) return;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.value));\n  },\n  getOffsetRect: (el) => ({\n    left: el?.offsetLeft ?? 0,\n    top: el?.offsetTop ?? 0,\n    width: el?.offsetWidth ?? 0,\n    height: el?.offsetHeight ?? 0\n  }),\n  getRectById: (ctx, id) => {\n    const radioEl = dom.getById(ctx, dom.getItemId(ctx, id));\n    if (!radioEl) return;\n    return dom.resolveRect(dom.getOffsetRect(radioEl));\n  },\n  resolveRect: (rect) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/radio-group.connect.ts\nfunction connect(state, send, normalize) {\n  const groupDisabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  function getItemState(props2) {\n    return {\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      hovered: state.context.hoveredValue === props2.value,\n      active: state.context.activeValue === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const radioState = getItemState(props2);\n    return {\n      \"data-focus\": dataAttr(radioState.focused),\n      \"data-focus-visible\": dataAttr(radioState.focused && state.context.focusVisible),\n      \"data-disabled\": dataAttr(radioState.disabled),\n      \"data-readonly\": dataAttr(readOnly),\n      \"data-state\": radioState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": dataAttr(radioState.hovered),\n      \"data-invalid\": dataAttr(radioState.invalid),\n      \"data-orientation\": state.context.orientation,\n      \"data-ssr\": dataAttr(state.context.ssr)\n    };\n  }\n  const focus = () => {\n    const firstEnabledAndCheckedInput = dom.getFirstEnabledAndCheckedInputEl(state.context);\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    const firstEnabledInput = dom.getFirstEnabledInputEl(state.context);\n    firstEnabledInput?.focus();\n  };\n  return {\n    focus,\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value, isTrusted: false });\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: null, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: dom.getRootId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(groupDisabled),\n        \"aria-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(groupDisabled),\n        id: dom.getLabelId(state.context),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        htmlFor: dom.getItemHiddenInputId(state.context, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({ type: \"SET_HOVERED\", value: props2.value, hovered: true });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_HOVERED\", value: null });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_ACTIVE\", value: null });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemLabelId(state.context, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const controlState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: state.context.dir,\n        id: dom.getItemControlId(state.context, props2.value),\n        \"data-active\": dataAttr(controlState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const inputState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": dom.getRootId(state.context),\n        id: dom.getItemHiddenInputId(state.context, props2.value),\n        type: \"radio\",\n        name: state.context.name || state.context.id,\n        form: state.context.form,\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({ type: \"SET_VALUE\", value: props2.value, isTrusted: true });\n          }\n        },\n        onBlur() {\n          send({ type: \"SET_FOCUSED\", value: null, focused: false, focusVisible: false });\n        },\n        onFocus() {\n          const focusVisible = isFocusVisible();\n          send({ type: \"SET_FOCUSED\", value: props2.value, focused: true, focusVisible });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: null });\n          }\n        },\n        disabled: inputState.disabled,\n        defaultChecked: inputState.checked,\n        style: visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        hidden: state.context.value == null,\n        \"data-disabled\": dataAttr(groupDisabled),\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": state.context.indicatorRect?.left,\n          \"--top\": state.context.indicatorRect?.top,\n          \"--width\": state.context.indicatorRect?.width,\n          \"--height\": state.context.indicatorRect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: state.context.canIndicatorTransition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [state.context.orientation === \"horizontal\" ? \"left\" : \"top\"]: state.context.orientation === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"radio\",\n      initial: \"idle\",\n      context: {\n        value: null,\n        activeValue: null,\n        focusedValue: null,\n        hoveredValue: null,\n        disabled: false,\n        orientation: \"vertical\",\n        ...ctx,\n        indicatorRect: {},\n        canIndicatorTransition: false,\n        fieldsetDisabled: false,\n        focusVisible: false,\n        ssr: true\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      entry: [\"syncIndicatorRect\", \"syncSsr\"],\n      exit: [\"cleanupObserver\"],\n      activities: [\"trackFormControlState\", \"trackFocusVisible\"],\n      watch: {\n        value: [\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]\n      },\n      on: {\n        SET_VALUE: [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setValue\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setValue\"]\n          }\n        ],\n        SET_HOVERED: {\n          actions: \"setHovered\"\n        },\n        SET_ACTIVE: {\n          actions: \"setActive\"\n        },\n        SET_FOCUSED: {\n          actions: \"setFocused\"\n        }\n      },\n      states: {\n        idle: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return trackFormControl(dom.getRootEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"SET_VALUE\", value: initialContext.value });\n            }\n          });\n        },\n        trackFocusVisible(ctx2) {\n          return trackFocusVisible({ root: dom.getRootNode(ctx2) });\n        }\n      },\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setHovered(ctx2, evt) {\n          ctx2.hoveredValue = evt.value;\n        },\n        setActive(ctx2, evt) {\n          ctx2.activeValue = evt.value;\n        },\n        setFocused(ctx2, evt) {\n          ctx2.focusedValue = evt.value;\n          ctx2.focusVisible = evt.focusVisible;\n        },\n        syncInputElements(ctx2) {\n          const inputs = dom.getInputEls(ctx2);\n          inputs.forEach((input) => {\n            input.checked = input.value === ctx2.value;\n          });\n        },\n        setIndicatorTransition(ctx2) {\n          ctx2.canIndicatorTransition = isString(ctx2.value);\n        },\n        cleanupObserver(ctx2) {\n          ctx2.indicatorCleanup?.();\n        },\n        syncSsr(ctx2) {\n          ctx2.ssr = false;\n        },\n        syncIndicatorRect(ctx2) {\n          ctx2.indicatorCleanup?.();\n          if (!dom.getIndicatorEl(ctx2)) return;\n          const value = ctx2.value;\n          const radioEl = dom.getActiveRadioEl(ctx2);\n          if (value == null || !radioEl) {\n            ctx2.indicatorRect = {};\n            return;\n          }\n          ctx2.indicatorCleanup = trackElementRect(radioEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el);\n            },\n            onChange(rect) {\n              ctx2.indicatorRect = dom.resolveRect(rect);\n              nextTick(() => {\n                ctx2.canIndicatorTransition = false;\n              });\n            }\n          });\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEls = dom.getInputEls(ctx2);\n          inputEls.forEach((inputEl) => {\n            const checked = inputEl.value === ctx2.value;\n            if (checked === inputEl.checked) return;\n            dispatchInputCheckedEvent(inputEl, { checked });\n          });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({ value: ctx.value });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = createProps()([\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onValueChange\",\n  \"orientation\",\n  \"readOnly\",\n  \"value\"\n]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = createSplitProps(itemProps);\n\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}