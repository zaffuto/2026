{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, getDataUrl } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { memoize } from 'proxy-memoize';\nimport { encode } from 'uqr';\nimport { createProps } from '@zag-js/types';\n\n// src/qr-code.anatomy.ts\nvar anatomy = createAnatomy(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `qrcode:${ctx.id}:root`,\n  getFrameId: ctx => ctx.ids?.frame ?? `qrcode:${ctx.id}:frame`,\n  getFrameEl: ctx => dom.getById(ctx, dom.getFrameId(ctx))\n});\n\n// src/qr-code.connect.ts\nfunction connect(state, send, normalize) {\n  const encoded = state.context.encoded;\n  const pixelSize = state.context.pixelSize;\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: state.context.value,\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = dom.getFrameEl(state.context);\n      return getDataUrl(svgEl, {\n        type,\n        quality\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: dom.getFrameId(state.context),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"DOWNLOAD_TRIGGER.CLICK\",\n            ...props2\n          });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"qr-code\",\n    initial: \"idle\",\n    context: {\n      value: \"\",\n      ...ctx,\n      pixelSize: 10\n    },\n    computed: {\n      encoded: memoize(ctx2 => encode(ctx2.value, ctx2.encoding))\n    },\n    on: {\n      \"VALUE.SET\": {\n        actions: [\"setValue\"]\n      },\n      \"DOWNLOAD_TRIGGER.CLICK\": {\n        actions: [\"downloadQrCode\"]\n      }\n    }\n  }, {\n    actions: {\n      setValue(ctx2, evt) {\n        set.value(ctx2, evt.value);\n      },\n      downloadQrCode(ctx2, evt) {\n        const {\n          mimeType,\n          quality,\n          fileName\n        } = evt;\n        const svgEl = dom.getFrameEl(ctx2);\n        const doc = dom.getDoc(ctx2);\n        getDataUrl(svgEl, {\n          type: mimeType,\n          quality\n        }).then(dataUri => {\n          const a = doc.createElement(\"a\");\n          a.href = dataUri;\n          a.rel = \"noopener\";\n          a.download = fileName;\n          a.click();\n          setTimeout(() => {\n            a.remove();\n          }, 0);\n        });\n      }\n    }\n  });\n}\nvar set = {\n  value(ctx, value) {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    ctx.onValueChange?.({\n      value\n    });\n  }\n};\nvar props = createProps()([\"ids\", \"value\", \"id\", \"encoding\", \"dir\", \"getRootNode\", \"onValueChange\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","getDataUrl","createMachine","createSplitProps","compact","isEqual","memoize","encode","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getFrameId","frame","getFrameEl","getById","connect","state","send","normalize","encoded","context","pixelSize","height","size","width","paths","row","col","x","y","data","push","value","setValue","type","quality","svgEl","getRootProps","element","attrs","style","position","getFrameProps","svg","xmlns","viewBox","getPatternProps","path","d","join","pattern","getOverlayProps","overlay","top","left","translate","getDownloadTriggerProps","props2","button","downloadTrigger","onClick","event","defaultPrevented","machine","userContext","initial","computed","ctx2","encoding","on","actions","evt","set","downloadQrCode","mimeType","fileName","doc","getDoc","then","dataUri","a","createElement","href","rel","download","click","setTimeout","remove","onValueChange","props","splitProps"],"sources":["/Users/macbook/developer/2025/2026/node_modules/@zag-js/qr-code/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, getDataUrl } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { memoize } from 'proxy-memoize';\nimport { encode } from 'uqr';\nimport { createProps } from '@zag-js/types';\n\n// src/qr-code.anatomy.ts\nvar anatomy = createAnatomy(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `qrcode:${ctx.id}:root`,\n  getFrameId: (ctx) => ctx.ids?.frame ?? `qrcode:${ctx.id}:frame`,\n  getFrameEl: (ctx) => dom.getById(ctx, dom.getFrameId(ctx))\n});\n\n// src/qr-code.connect.ts\nfunction connect(state, send, normalize) {\n  const encoded = state.context.encoded;\n  const pixelSize = state.context.pixelSize;\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = dom.getFrameEl(state.context);\n      return getDataUrl(svgEl, { type, quality });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: dom.getFrameId(state.context),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DOWNLOAD_TRIGGER.CLICK\", ...props2 });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"qr-code\",\n      initial: \"idle\",\n      context: {\n        value: \"\",\n        ...ctx,\n        pixelSize: 10\n      },\n      computed: {\n        encoded: memoize((ctx2) => encode(ctx2.value, ctx2.encoding))\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"DOWNLOAD_TRIGGER.CLICK\": {\n          actions: [\"downloadQrCode\"]\n        }\n      }\n    },\n    {\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        downloadQrCode(ctx2, evt) {\n          const { mimeType, quality, fileName } = evt;\n          const svgEl = dom.getFrameEl(ctx2);\n          const doc = dom.getDoc(ctx2);\n          getDataUrl(svgEl, { type: mimeType, quality }).then((dataUri) => {\n            const a = doc.createElement(\"a\");\n            a.href = dataUri;\n            a.rel = \"noopener\";\n            a.download = fileName;\n            a.click();\n            setTimeout(() => {\n              a.remove();\n            }, 0);\n          });\n        }\n      }\n    }\n  );\n}\nvar set = {\n  value(ctx, value) {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    ctx.onValueChange?.({ value });\n  }\n};\nvar props = createProps()([\n  \"ids\",\n  \"value\",\n  \"id\",\n  \"encoding\",\n  \"dir\",\n  \"getRootNode\",\n  \"onValueChange\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}